[{"/home/abdulaziz/projects/arabJs/homepage/src/index.js":"1","/home/abdulaziz/projects/arabJs/homepage/src/App.js":"2","/home/abdulaziz/projects/arabJs/homepage/src/EditorArabJS.js":"3","/home/abdulaziz/projects/arabJs/homepage/src/EditorJS.js":"4","/home/abdulaziz/projects/arabJs/homepage/src/JsConsole.js":"5","/home/abdulaziz/projects/arabJs/homepage/src/CodeSnippets.js":"6","/home/abdulaziz/projects/arabJs/homepage/src/arabJs/arabJsMode.js":"7"},{"size":489,"mtime":1615089986250,"results":"8","hashOfConfig":"9"},{"size":5153,"mtime":1615167614110,"results":"10","hashOfConfig":"9"},{"size":1004,"mtime":1615089986250,"results":"11","hashOfConfig":"9"},{"size":984,"mtime":1615089986250,"results":"12","hashOfConfig":"9"},{"size":541,"mtime":1615089986250,"results":"13","hashOfConfig":"9"},{"size":6959,"mtime":1615165845450,"results":"14","hashOfConfig":"9"},{"size":40624,"mtime":1615089986250,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"r3vwxz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":342,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/home/abdulaziz/projects/arabJs/homepage/src/index.js",[],["35","36"],"/home/abdulaziz/projects/arabJs/homepage/src/App.js",[],"/home/abdulaziz/projects/arabJs/homepage/src/EditorArabJS.js",["37"],"import { EditorState, EditorView, basicSetup } from \"@codemirror/basic-setup\"\nimport { oneDark } from \"@codemirror/theme-one-dark\"\nimport { useEffect, useRef } from \"react\"\nimport { StreamLanguage } from \"@codemirror/stream-parser\"\nimport { arabJsMode } from \"./arabJs/arabJsMode\"\nimport { tagExtension } from \"@codemirror/state\"\n\n\nexport default function Editor({ code, editor }) {\n    const editorRef = useRef(null);\n    let editableTagrtl = Symbol()\n\n    useEffect(() => {\n        editor.current = new EditorView({\n            state: EditorState.create({\n                doc: code,\n                extensions: [\n                    oneDark,\n                    basicSetup,\n                    StreamLanguage.define(arabJsMode),\n                    tagExtension(editableTagrtl, EditorView.editable.of(true))\n                ],\n\n            }),\n            parent: editorRef.current,\n        })\n    }, [])\n\n    return (\n        <div ref={editorRef} style={{ height: \"350px\" }} dir={\"rtl\"}></div>\n    )\n}","/home/abdulaziz/projects/arabJs/homepage/src/EditorJS.js",["38"],"import { EditorState, EditorView, basicSetup } from \"@codemirror/basic-setup\"\nimport { oneDark } from \"@codemirror/theme-one-dark\"\nimport { useEffect, useRef } from \"react\"\nimport { StreamLanguage } from \"@codemirror/stream-parser\"\nimport { arabJsMode } from \"./arabJs/arabJsMode\"\nimport { tagExtension } from \"@codemirror/state\"\n\n\nexport default function EditorNext({ code }) {\n    const editorRef = useRef(null);\n    let editableTagltr = Symbol();\n\n    useEffect(() => {\n      new EditorView({\n            state: EditorState.create({\n                doc: code,\n                extensions: [\n                    oneDark,\n                    basicSetup,\n                    StreamLanguage.define(arabJsMode),\n                    tagExtension( editableTagltr, EditorView.editable.of(false))\n                ],\n\n            }),\n            parent: editorRef.current,\n        })\n    }, [])\n\n    return (\n        <div ref={editorRef} style={{ height: \"350px\" }} dir={\"ltr\"}></div>\n    )\n}","/home/abdulaziz/projects/arabJs/homepage/src/JsConsole.js",[],"/home/abdulaziz/projects/arabJs/homepage/src/CodeSnippets.js",["39"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\n\nconst snippets = [\n  `اطبع.نص(\"اهلاً بالعالم\")`\n  // \n  ,\n  `\n// متتالية فيبوناتشي\n\nداله متتالية_فيبوناتشي (رقم){  \n  اذا (رقم <= 1 )\n  \tالجواب رقم\n  الجواب  متتالية_فيبوناتشي (رقم - 1) +  متتالية_فيبوناتشي(رقم - 2)\n}\nلنفرض مصفوفة = [1,2,3,4,5]\n\nمصفوفة.لكل(عنصر => اطبع.نص(\"الرقم:\" ,عنصر ,\" النتيجة: \", متتالية_فيبوناتشي(عنصر)))\n`\n  // \n  ,\n  // \n  `\n// ترتيب الدول حسب نسبة الوفاة استناداً\n// على الاصابة بفيروس كورونا المستجد \nلنفرض الرابط = \"https://covid19-api.com/country/all?format=json\"\nلنفرض حمل_المعلومات = (الرابط) => حمل(الرابط).ثم(البيانات => البيانات.الى_جيسون())\nلنفرض نقح_البيانات = (البيانات) => البيانات.نقح(({country,confirmed,deaths}) => ({الدولة : country , نسبة_الوفاة :deaths/confirmed*100}))\nلنفرض صفي_البيانات = (البيانات) => البيانات.صفي(({نسبة_الوفاة}) => !رقمي(نسبة_الوفاة))\nلنفرض رتب_الدول = (الدول) => الدول.رتب((الاصغر, الاكبر) => الاصغر.نسبة_الوفاة - الاكبر.نسبة_الوفاة)\n\nحمل_المعلومات(الرابط)\n\t\t.ثم(نقح_البيانات)\n\t\t.ثم(صفي_البيانات)\n\t\t.ثم(رتب_الدول)\n\t\t.ثم(الدول=> اطبع.جدول(الدول))\n\t\t.فشل(الخطأ => اطبع.خلل(الخطأ))\n\n`\n  //\n  ,\n  //\n  `\n  // نمذجة نسبة الوفاة للدول العربية استناداً\n  // على الاصابة بفيروس كورونا المستجد\n  // البرنامج يستخدم مكتبة D3 لنمذجة البيانات\n  لنفرض الرابط = \"https://covid19-api.com/country/all?format=json\"\n  لنفرض حمل_المعلومات = (الرابط) => حمل(الرابط).ثم(البيانات => البيانات.الى_جيسون())\n  لنفرض نقح_البيانات = (البيانات) => البيانات.نقح(({country,confirmed,deaths}) =>\n                                                  ({الدولة : country , نسبة_الوفاة :deaths/confirmed*100}))\n  لنفرض صفي_البيانات = (البيانات) => البيانات.صفي(({نسبة_الوفاة}) => !رقمي(نسبة_الوفاة))\n  لنفرض رتب_الدول = (الدول) => الدول.رتب((الاصغر, الاكبر) => الاصغر.نسبة_الوفاة - الاكبر.نسبة_الوفاة)\n  لنفرض الدول_العربية = (الدول) => الدول.صفي(({الدولة}) =>\n                                             [\"Yemen\",\"Tunisia\",\"Syria\",\"Morocco\",\"Libya\",\"Lebanon\",\"Jordan\",\n                                              \"Iraq\",\"Sudan\",\"Algeria\",\"Egypt\",\"Saudi Arabia\", \"Qatar\", \"UAE\" ,\n                                              \"Bahrain\", \"Kuwait\", \"Oman\"].يحتوي(الدولة) )\n  لنفرض d3 = مجهول\n  \n  استورد (\"https://unpkg.com/d3?module\")\n    .ثم(المكتبة =>d3 = المكتبة)\n    .ثم(_=> حمل_المعلومات(الرابط))\n    .ثم(نقح_البيانات)\n    .ثم(صفي_البيانات)\n    .ثم(رتب_الدول)\n    .ثم(الدول_العربية)\n    .ثم(الدول => نمذج_البيانات(الدول))\n    .فشل(الخطأ => اطبع.خلل(الخطأ))\n\n// D3 code in JS\n\n    لنفرض نمذج_البيانات = (الدول) => {\n       margin = {top: 20, right: 20, bottom: 30, left: 40},\n          width = 960 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom;\n      \n       x = d3.scaleBand()\n                .range([0, width])\n                .padding(0.1);\n       y = d3.scaleLinear()\n              .range([height, 0]);\n      \n        d3.select(\".myChart\").html(\"\");\n       svg = d3.select(\".myChart\").append(\"svg\")\n       .attr(\"width\", '100%')\n       .attr(\"height\", '100%')\n       .attr(\"viewBox\", '20 0 910 7000')\n      .attr('preserveAspectRatio','xMinYMin')\n       .append(\"g\")\n          .attr(\"transform\", \n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n         x.domain(الدول.map((d)=>  d.الدولة));\n        y.domain([0, d3.max(الدول, (d)=> d.نسبة_الوفاة )]);\n      \n        svg.selectAll(\".bar\")\n            .data(الدول)\n          .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", (d)=>  x(d.الدولة))\n            .attr(\"width\", x.bandwidth())\n            .attr(\"y\", (d)=> y(d.نسبة_الوفاة ))\n            .attr(\"height\", (d)=>  height - y(d.نسبة_الوفاة ))\n            .attr(\"fill\",(d,i)=> d3.interpolateTurbo(i/17))\n\n\n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x));\n\n      \n        svg.append(\"g\")\n            .call(d3.axisLeft(y))\n            .selectAll(\"text\")\n            .attr(\"x\", -10)\n           .style(\"text-anchor\", \"start\");\n    }\n  `\n  \n  ];\n\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    display: \"block\",\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function CodeSnipts({ onCodeChange }) {\n  const classes = useStyles();\n  const [snippet, setSnippet] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setSnippet(event.target.value);\n    const index  = event.target.value;\n    onCodeChange(snippets[index], index === 3 ? \"DOM\": \"console\")\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <label className={classes.label}>\n        أختر برنامج\n      </label>\n      <FormControl className={classes.formControl}>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={snippet}\n          onChange={handleChange}\n        >\n          <MenuItem value={0}>اهلاً بالعالم</MenuItem>\n          <MenuItem value={1}>متتالية فيبوناتشي</MenuItem>\n          <MenuItem value={2}>ترتيب الدول على حسب نسبة الوفيات بكورونا</MenuItem>\n          <MenuItem value={3}>نمذجة نسبة الوفيات للدول العربية</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","/home/abdulaziz/projects/arabJs/homepage/src/arabJs/arabJsMode.js",["40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381"],"//edited version of https://github.com/codemirror/legacy-modes/blob/main/mode/javascript.js\nfunction mkJavaScript(parserConfig) {\n    var statementIndent = parserConfig.statementIndent;\n    var jsonldMode = parserConfig.jsonld;\n    var jsonMode = parserConfig.json || jsonldMode;\n    var isTS = parserConfig.typescript;\n    var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n    // Tokenizer\n\n    var keywords = function () {\n        function kw(type) { return { type: type, style: \"keyword\" }; }\n        var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n        var operator = kw(\"operator\"), atom = { type: \"atom\", style: \"atom\" };\n\n        return {\n            \"if\": kw(\"if\"), \"اذا\": kw(\"if\"), \"مادام\": A, \"while\": A, \"with\": A, \"والا\": B, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n            \"return\": D, \"الجواب\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n            \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"لنفرض\": kw(\"var\"), \"let\": kw(\"var\"),\n            \"function\": kw(\"function\"), \"داله\": kw(\"function\"), \"catch\": kw(\"catch\"),\n            \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n            \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n            \"true\": atom, \"false\": atom, \"null\": atom, \"مجهول\": atom, \"undefined\": atom, \"NaN\": atom, \"رقمي\": atom, \"Infinity\": atom,\n            \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n            \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"استورد\": kw(\"import\"), \"extends\": C,\n            \"await\": C,\n        };\n    }();\n\n    var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n    var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n    function readRegexp(stream) {\n        var escaped = false, next, inSet = false;\n        while ((next = stream.next()) != null) {\n            if (!escaped) {\n                if (next == \"/\" && !inSet) return;\n                if (next == \"[\") inSet = true;\n                else if (inSet && next == \"]\") inSet = false;\n            }\n            escaped = !escaped && next == \"\\\\\";\n        }\n    }\n\n    // Used as scratch variables to communicate multiple values without\n    // consing up tons of objects.\n    var type, content;\n    function ret(tp, style, cont) {\n        type = tp; content = cont;\n        return style;\n    }\n    function tokenBase(stream, state) {\n        var ch = stream.next();\n        if (ch == '\"' || ch == \"'\") {\n            state.tokenize = tokenString(ch);\n            return state.tokenize(stream, state);\n        } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n            return ret(\"number\", \"number\");\n        } else if (ch == \".\" && stream.match(\"..\")) {\n            return ret(\"spread\", \"meta\");\n        } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n            return ret(ch);\n        } else if (ch == \"=\" && stream.eat(\">\")) {\n            return ret(\"=>\", \"operator\");\n        } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n            return ret(\"number\", \"number\");\n        } else if (/\\d/.test(ch)) {\n            stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n            return ret(\"number\", \"number\");\n        } else if (ch == \"/\") {\n            if (stream.eat(\"*\")) {\n                state.tokenize = tokenComment;\n                return tokenComment(stream, state);\n            } else if (stream.eat(\"/\")) {\n                stream.skipToEnd();\n                return ret(\"comment\", \"comment\");\n            } else if (expressionAllowed(stream, state, 1)) {\n                readRegexp(stream);\n                stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n                return ret(\"regexp\", \"string.special\");\n            } else {\n                stream.eat(\"=\");\n                return ret(\"operator\", \"operator\", stream.current());\n            }\n        } else if (ch == \"`\") {\n            state.tokenize = tokenQuasi;\n            return tokenQuasi(stream, state);\n        } else if (ch == \"#\" && stream.peek() == \"!\") {\n            stream.skipToEnd();\n            return ret(\"meta\", \"meta\");\n        } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n            return ret(\"variable\", \"property\")\n        } else if (ch == \"<\" && stream.match(\"!--\") ||\n            (ch == \"-\" && stream.match(\"->\") && !/\\S/.test(stream.string.slice(0, stream.start)))) {\n            stream.skipToEnd()\n            return ret(\"comment\", \"comment\")\n        } else if (isOperatorChar.test(ch)) {\n            if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n                if (stream.eat(\"=\")) {\n                    if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n                } else if (/[<>*+\\-|&?]/.test(ch)) {\n                    stream.eat(ch)\n                    if (ch == \">\") stream.eat(ch)\n                }\n            }\n            if (ch == \"?\" && stream.eat(\".\")) return ret(\".\")\n            return ret(\"operator\", \"operator\", stream.current());\n        } else if (wordRE.test(ch)) {\n            stream.eatWhile(wordRE);\n            var word = stream.current()\n            if (state.lastType != \".\") {\n                if (keywords.propertyIsEnumerable(word)) {\n                    var kw = keywords[word]\n                    return ret(kw.type, kw.style, word)\n                }\n                if (word == \"async\" && stream.match(/^(\\s|\\/\\*([^*]|\\*(?!\\/))*?\\*\\/)*[\\[\\(\\w]/, false))\n                    return ret(\"async\", \"keyword\", word)\n            }\n            return ret(\"variable\", \"variable\", word)\n        }\n    }\n\n    function tokenString(quote) {\n        return function (stream, state) {\n            var escaped = false, next;\n            if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)) {\n                state.tokenize = tokenBase;\n                return ret(\"jsonld-keyword\", \"meta\");\n            }\n            while ((next = stream.next()) != null) {\n                if (next == quote && !escaped) break;\n                escaped = !escaped && next == \"\\\\\";\n            }\n            if (!escaped) state.tokenize = tokenBase;\n            return ret(\"string\", \"string\");\n        };\n    }\n\n    function tokenComment(stream, state) {\n        var maybeEnd = false, ch;\n        while (ch = stream.next()) {\n            if (ch == \"/\" && maybeEnd) {\n                state.tokenize = tokenBase;\n                break;\n            }\n            maybeEnd = (ch == \"*\");\n        }\n        return ret(\"comment\", \"comment\");\n    }\n\n    function tokenQuasi(stream, state) {\n        var escaped = false, next;\n        while ((next = stream.next()) != null) {\n            if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n                state.tokenize = tokenBase;\n                break;\n            }\n            escaped = !escaped && next == \"\\\\\";\n        }\n        return ret(\"quasi\", \"string.special\", stream.current());\n    }\n\n    var brackets = \"([{}])\";\n    // This is a crude lookahead trick to try and notice that we're\n    // parsing the argument patterns for a fat-arrow function before we\n    // actually hit the arrow token. It only works if the arrow is on\n    // the same line as the arguments and there's no strange noise\n    // (comments) in between. Fallback is to only notice when we hit the\n    // arrow, and not declare the arguments as locals for the arrow\n    // body.\n    function findFatArrow(stream, state) {\n        if (state.fatArrowAt) state.fatArrowAt = null;\n        var arrow = stream.string.indexOf(\"=>\", stream.start);\n        if (arrow < 0) return;\n\n        if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n            var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n            if (m) arrow = m.index\n        }\n\n        var depth = 0, sawSomething = false;\n        for (var pos = arrow - 1; pos >= 0; --pos) {\n            var ch = stream.string.charAt(pos);\n            var bracket = brackets.indexOf(ch);\n            if (bracket >= 0 && bracket < 3) {\n                if (!depth) { ++pos; break; }\n                if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n            } else if (bracket >= 3 && bracket < 6) {\n                ++depth;\n            } else if (wordRE.test(ch)) {\n                sawSomething = true;\n            } else if (/[\"'\\/`]/.test(ch)) {\n                for (; ; --pos) {\n                    if (pos == 0) return\n                    var next = stream.string.charAt(pos - 1)\n                    if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n                }\n            } else if (sawSomething && !depth) {\n                ++pos;\n                break;\n            }\n        }\n        if (sawSomething && !depth) state.fatArrowAt = pos;\n    }\n\n    // Parser\n\n    var atomicTypes = { \"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true };\n\n    function JSLexical(indented, column, type, align, prev, info) {\n        this.indented = indented;\n        this.column = column;\n        this.type = type;\n        this.prev = prev;\n        this.info = info;\n        if (align != null) this.align = align;\n    }\n\n    function inScope(state, varname) {\n        for (var v = state.localVars; v; v = v.next)\n            if (v.name == varname) return true;\n        for (var cx = state.context; cx; cx = cx.prev) {\n            for (var v = cx.vars; v; v = v.next)\n                if (v.name == varname) return true;\n        }\n    }\n\n    function parseJS(state, style, type, content, stream) {\n        var cc = state.cc;\n        // Communicate our context to the combinators.\n        // (Less wasteful than consing up a hundred closures on every call.)\n        cx.state = state; cx.stream = stream; cx.marked = null; cx.cc = cc; cx.style = style;\n\n        if (!state.lexical.hasOwnProperty(\"align\"))\n            state.lexical.align = true;\n\n        while (true) {\n            var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n            if (combinator(type, content)) {\n                while (cc.length && cc[cc.length - 1].lex)\n                    cc.pop()();\n                if (cx.marked) return cx.marked;\n                if (type == \"variable\" && inScope(state, content)) return \"variableName.local\";\n                return style;\n            }\n        }\n    }\n\n    // Combinator utils\n\n    var cx = { state: null, column: null, marked: null, cc: null };\n    function pass() {\n        for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n    }\n    function cont() {\n        pass.apply(null, arguments);\n        return true;\n    }\n    function inList(name, list) {\n        for (var v = list; v; v = v.next) if (v.name == name) return true\n        return false;\n    }\n    function register(varname) {\n        var state = cx.state;\n        cx.marked = \"def\";\n        if (state.context) {\n            if (state.lexical.info == \"var\" && state.context && state.context.block) {\n                // FIXME function decls are also not block scoped\n                var newContext = registerVarScoped(varname, state.context)\n                if (newContext != null) {\n                    state.context = newContext\n                    return\n                }\n            } else if (!inList(varname, state.localVars)) {\n                state.localVars = new Var(varname, state.localVars)\n                return\n            }\n        }\n        // Fall through means this is global\n        if (parserConfig.globalVars && !inList(varname, state.globalVars))\n            state.globalVars = new Var(varname, state.globalVars)\n    }\n    function registerVarScoped(varname, context) {\n        if (!context) {\n            return null\n        } else if (context.block) {\n            var inner = registerVarScoped(varname, context.prev)\n            if (!inner) return null\n            if (inner == context.prev) return context\n            return new Context(inner, context.vars, true)\n        } else if (inList(varname, context.vars)) {\n            return context\n        } else {\n            return new Context(context.prev, new Var(varname, context.vars), false)\n        }\n    }\n\n    function isModifier(name) {\n        return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n    }\n\n    // Combinators\n\n    function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n    function Var(name, next) { this.name = name; this.next = next }\n\n    var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n    function pushcontext() {\n        cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n        cx.state.localVars = defaultVars\n    }\n    function pushblockcontext() {\n        cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n        cx.state.localVars = null\n    }\n    function popcontext() {\n        cx.state.localVars = cx.state.context.vars\n        cx.state.context = cx.state.context.prev\n    }\n    popcontext.lex = true\n    function pushlex(type, info) {\n        var result = function () {\n            var state = cx.state, indent = state.indented;\n            if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n            else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n                indent = outer.indented;\n            state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n        };\n        result.lex = true;\n        return result;\n    }\n    function poplex() {\n        var state = cx.state;\n        if (state.lexical.prev) {\n            if (state.lexical.type == \")\")\n                state.indented = state.lexical.indented;\n            state.lexical = state.lexical.prev;\n        }\n    }\n    poplex.lex = true;\n\n    function expect(wanted) {\n        function exp(type) {\n            if (type == wanted) return cont();\n            else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n            else return cont(exp);\n        };\n        return exp;\n    }\n\n    function statement(type, value) {\n        if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n        if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n        if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n        if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n        if (type == \"debugger\") return cont(expect(\";\"));\n        if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n        if (type == \";\") return cont();\n        if (type == \"if\") {\n            if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n                cx.state.cc.pop()();\n            return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n        }\n        if (type == \"function\") return cont(functiondef);\n        if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n        if (type == \"class\" || (isTS && value == \"interface\")) {\n            cx.marked = \"keyword\"\n            return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n        }\n        if (type == \"variable\") {\n            if (isTS && value == \"declare\") {\n                cx.marked = \"keyword\"\n                return cont(statement)\n            } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n                cx.marked = \"keyword\"\n                if (value == \"enum\") return cont(enumdef);\n                else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n                else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n            } else if (isTS && value == \"namespace\") {\n                cx.marked = \"keyword\"\n                return cont(pushlex(\"form\"), expression, statement, poplex)\n            } else if (isTS && value == \"abstract\") {\n                cx.marked = \"keyword\"\n                return cont(statement)\n            } else {\n                return cont(pushlex(\"stat\"), maybelabel);\n            }\n        }\n        if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n            block, poplex, poplex, popcontext);\n        if (type == \"case\") return cont(expression, expect(\":\"));\n        if (type == \"default\") return cont(expect(\":\"));\n        if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n        if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n        if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n        if (type == \"async\") return cont(statement)\n        if (value == \"@\") return cont(expression, statement)\n        return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n    }\n    function maybeCatchBinding(type) {\n        if (type == \"(\") return cont(funarg, expect(\")\"))\n    }\n    function expression(type, value) {\n        return expressionInner(type, value, false);\n    }\n    function expressionNoComma(type, value) {\n        return expressionInner(type, value, true);\n    }\n    function parenExpr(type) {\n        if (type != \"(\") return pass()\n        return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex)\n    }\n    function expressionInner(type, value, noComma) {\n        if (cx.state.fatArrowAt == cx.stream.start) {\n            var body = noComma ? arrowBodyNoComma : arrowBody;\n            if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n            else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n        }\n\n        var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n        if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n        if (type == \"function\") return cont(functiondef, maybeop);\n        if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n        if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n        if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n        if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n        if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n        if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n        if (type == \"quasi\") return pass(quasi, maybeop);\n        if (type == \"new\") return cont(maybeTarget(noComma));\n        if (type == \"import\") return cont(expression);\n        return cont();\n    }\n    function maybeexpression(type) {\n        if (type.match(/[;\\}\\)\\],]/)) return pass();\n        return pass(expression);\n    }\n\n    function maybeoperatorComma(type, value) {\n        if (type == \",\") return cont(maybeexpression);\n        return maybeoperatorNoComma(type, value, false);\n    }\n    function maybeoperatorNoComma(type, value, noComma) {\n        var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n        var expr = noComma == false ? expression : expressionNoComma;\n        if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n        if (type == \"operator\") {\n            if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n            if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n                return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n            if (value == \"?\") return cont(expression, expect(\":\"), expr);\n            return cont(expr);\n        }\n        if (type == \"quasi\") { return pass(quasi, me); }\n        if (type == \";\") return;\n        if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n        if (type == \".\") return cont(property, me);\n        if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n        if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n        if (type == \"regexp\") {\n            cx.state.lastType = cx.marked = \"operator\"\n            cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n            return cont(expr)\n        }\n    }\n    function quasi(type, value) {\n        if (type != \"quasi\") return pass();\n        if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n        return cont(expression, continueQuasi);\n    }\n    function continueQuasi(type) {\n        if (type == \"}\") {\n            cx.marked = \"string.special\";\n            cx.state.tokenize = tokenQuasi;\n            return cont(quasi);\n        }\n    }\n    function arrowBody(type) {\n        findFatArrow(cx.stream, cx.state);\n        return pass(type == \"{\" ? statement : expression);\n    }\n    function arrowBodyNoComma(type) {\n        findFatArrow(cx.stream, cx.state);\n        return pass(type == \"{\" ? statement : expressionNoComma);\n    }\n    function maybeTarget(noComma) {\n        return function (type) {\n            if (type == \".\") return cont(noComma ? targetNoComma : target);\n            else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n            else return pass(noComma ? expressionNoComma : expression);\n        };\n    }\n    function target(_, value) {\n        if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n    }\n    function targetNoComma(_, value) {\n        if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n    }\n    function maybelabel(type) {\n        if (type == \":\") return cont(poplex, statement);\n        return pass(maybeoperatorComma, expect(\";\"), poplex);\n    }\n    function property(type) {\n        if (type == \"variable\") { cx.marked = \"property\"; return cont(); }\n    }\n    function objprop(type, value) {\n        if (type == \"async\") {\n            cx.marked = \"property\";\n            return cont(objprop);\n        } else if (type == \"variable\" || cx.style == \"keyword\") {\n            cx.marked = \"property\";\n            if (value == \"get\" || value == \"set\") return cont(getterSetter);\n            var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n            if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n                cx.state.fatArrowAt = cx.stream.pos + m[0].length\n            return cont(afterprop);\n        } else if (type == \"number\" || type == \"string\") {\n            cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n            return cont(afterprop);\n        } else if (type == \"jsonld-keyword\") {\n            return cont(afterprop);\n        } else if (isTS && isModifier(value)) {\n            cx.marked = \"keyword\"\n            return cont(objprop)\n        } else if (type == \"[\") {\n            return cont(expression, maybetype, expect(\"]\"), afterprop);\n        } else if (type == \"spread\") {\n            return cont(expressionNoComma, afterprop);\n        } else if (value == \"*\") {\n            cx.marked = \"keyword\";\n            return cont(objprop);\n        } else if (type == \":\") {\n            return pass(afterprop)\n        }\n    }\n    function getterSetter(type) {\n        if (type != \"variable\") return pass(afterprop);\n        cx.marked = \"property\";\n        return cont(functiondef);\n    }\n    function afterprop(type) {\n        if (type == \":\") return cont(expressionNoComma);\n        if (type == \"(\") return pass(functiondef);\n    }\n    function commasep(what, end, sep) {\n        function proceed(type, value) {\n            if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n                var lex = cx.state.lexical;\n                if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n                return cont(function (type, value) {\n                    if (type == end || value == end) return pass()\n                    return pass(what)\n                }, proceed);\n            }\n            if (type == end || value == end) return cont();\n            if (sep && sep.indexOf(\";\") > -1) return pass(what)\n            return cont(expect(end));\n        }\n        return function (type, value) {\n            if (type == end || value == end) return cont();\n            return pass(what, proceed);\n        };\n    }\n    function contCommasep(what, end, info) {\n        for (var i = 3; i < arguments.length; i++)\n            cx.cc.push(arguments[i]);\n        return cont(pushlex(end, info), commasep(what, end), poplex);\n    }\n    function block(type) {\n        if (type == \"}\") return cont();\n        return pass(statement, block);\n    }\n    function maybetype(type, value) {\n        if (isTS) {\n            if (type == \":\") return cont(typeexpr);\n            if (value == \"?\") return cont(maybetype);\n        }\n    }\n    function maybetypeOrIn(type, value) {\n        if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n    }\n    function mayberettype(type) {\n        if (isTS && type == \":\") {\n            if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n            else return cont(typeexpr)\n        }\n    }\n    function isKW(_, value) {\n        if (value == \"is\") {\n            cx.marked = \"keyword\"\n            return cont()\n        }\n    }\n    function typeexpr(type, value) {\n        if (value == \"keyof\" || value == \"typeof\" || value == \"infer\") {\n            cx.marked = \"keyword\"\n            return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n        }\n        if (type == \"variable\" || value == \"void\") {\n            cx.marked = \"type\"\n            return cont(afterType)\n        }\n        if (value == \"|\" || value == \"&\") return cont(typeexpr)\n        if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n        if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n        if (type == \"{\") return cont(pushlex(\"}\"), typeprops, poplex, afterType)\n        if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n        if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n    }\n    function maybeReturnType(type) {\n        if (type == \"=>\") return cont(typeexpr)\n    }\n    function typeprops(type) {\n        if (type == \"}\") return cont()\n        if (type == \",\" || type == \";\") return cont(typeprops)\n        return pass(typeprop, typeprops)\n    }\n    function typeprop(type, value) {\n        if (type == \"variable\" || cx.style == \"keyword\") {\n            cx.marked = \"property\"\n            return cont(typeprop)\n        } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n            return cont(typeprop)\n        } else if (type == \":\") {\n            return cont(typeexpr)\n        } else if (type == \"[\") {\n            return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n        } else if (type == \"(\") {\n            return pass(functiondecl, typeprop)\n        }\n    }\n    function typearg(type, value) {\n        if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n        if (type == \":\") return cont(typeexpr)\n        if (type == \"spread\") return cont(typearg)\n        return pass(typeexpr)\n    }\n    function afterType(type, value) {\n        if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n        if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n        if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n        if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n        if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n    }\n    function maybeTypeArgs(_, value) {\n        if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    }\n    function typeparam() {\n        return pass(typeexpr, maybeTypeDefault)\n    }\n    function maybeTypeDefault(_, value) {\n        if (value == \"=\") return cont(typeexpr)\n    }\n    function vardef(_, value) {\n        if (value == \"enum\") { cx.marked = \"keyword\"; return cont(enumdef) }\n        return pass(pattern, maybetype, maybeAssign, vardefCont);\n    }\n    function pattern(type, value) {\n        if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n        if (type == \"variable\") { register(value); return cont(); }\n        if (type == \"spread\") return cont(pattern);\n        if (type == \"[\") return contCommasep(eltpattern, \"]\");\n        if (type == \"{\") return contCommasep(proppattern, \"}\");\n    }\n    function proppattern(type, value) {\n        if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n            register(value);\n            return cont(maybeAssign);\n        }\n        if (type == \"variable\") cx.marked = \"property\";\n        if (type == \"spread\") return cont(pattern);\n        if (type == \"}\") return pass();\n        if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n        return cont(expect(\":\"), pattern, maybeAssign);\n    }\n    function eltpattern() {\n        return pass(pattern, maybeAssign)\n    }\n    function maybeAssign(_type, value) {\n        if (value == \"=\") return cont(expressionNoComma);\n    }\n    function vardefCont(type) {\n        if (type == \",\") return cont(vardef);\n    }\n    function maybeelse(type, value) {\n        if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n    }\n    function forspec(type, value) {\n        if (value == \"await\") return cont(forspec);\n        if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n    }\n    function forspec1(type) {\n        if (type == \"var\") return cont(vardef, forspec2);\n        if (type == \"variable\") return cont(forspec2);\n        return pass(forspec2)\n    }\n    function forspec2(type, value) {\n        if (type == \")\") return cont()\n        if (type == \";\") return cont(forspec2)\n        if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n        return pass(expression, forspec2)\n    }\n    function functiondef(type, value) {\n        if (value == \"*\") { cx.marked = \"keyword\"; return cont(functiondef); }\n        if (type == \"variable\") { register(value); return cont(functiondef); }\n        if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n        if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n    }\n    function functiondecl(type, value) {\n        if (value == \"*\") { cx.marked = \"keyword\"; return cont(functiondecl); }\n        if (type == \"variable\") { register(value); return cont(functiondecl); }\n        if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n        if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n    }\n    function typename(type, value) {\n        if (type == \"keyword\" || type == \"variable\") {\n            cx.marked = \"type\"\n            return cont(typename)\n        } else if (value == \"<\") {\n            return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n        }\n    }\n    function funarg(type, value) {\n        if (value == \"@\") cont(expression, funarg)\n        if (type == \"spread\") return cont(funarg);\n        if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n        if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n        return pass(pattern, maybetype, maybeAssign);\n    }\n    function classExpression(type, value) {\n        // Class expressions may have an optional name.\n        if (type == \"variable\") return className(type, value);\n        return classNameAfter(type, value);\n    }\n    function className(type, value) {\n        if (type == \"variable\") { register(value); return cont(classNameAfter); }\n    }\n    function classNameAfter(type, value) {\n        if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n        if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n            if (value == \"implements\") cx.marked = \"keyword\";\n            return cont(isTS ? typeexpr : expression, classNameAfter);\n        }\n        if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n    }\n    function classBody(type, value) {\n        if (type == \"async\" ||\n            (type == \"variable\" &&\n                (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n                cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n            cx.marked = \"keyword\";\n            return cont(classBody);\n        }\n        if (type == \"variable\" || cx.style == \"keyword\") {\n            cx.marked = \"property\";\n            return cont(classfield, classBody);\n        }\n        if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n        if (type == \"[\")\n            return cont(expression, maybetype, expect(\"]\"), classfield, classBody)\n        if (value == \"*\") {\n            cx.marked = \"keyword\";\n            return cont(classBody);\n        }\n        if (isTS && type == \"(\") return pass(functiondecl, classBody)\n        if (type == \";\" || type == \",\") return cont(classBody);\n        if (type == \"}\") return cont();\n        if (value == \"@\") return cont(expression, classBody)\n    }\n    function classfield(type, value) {\n        if (value == \"?\") return cont(classfield)\n        if (type == \":\") return cont(typeexpr, maybeAssign)\n        if (value == \"=\") return cont(expressionNoComma)\n        var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n        return pass(isInterface ? functiondecl : functiondef)\n    }\n    function afterExport(type, value) {\n        if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n        if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n        if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n        return pass(statement);\n    }\n    function exportField(type, value) {\n        if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n        if (type == \"variable\") return pass(expressionNoComma, exportField);\n    }\n    function afterImport(type) {\n        if (type == \"string\") return cont();\n        if (type == \"(\") return pass(expression);\n        return pass(importSpec, maybeMoreImports, maybeFrom);\n    }\n    function importSpec(type, value) {\n        if (type == \"{\") return contCommasep(importSpec, \"}\");\n        if (type == \"variable\") register(value);\n        if (value == \"*\") cx.marked = \"keyword\";\n        return cont(maybeAs);\n    }\n    function maybeMoreImports(type) {\n        if (type == \",\") return cont(importSpec, maybeMoreImports)\n    }\n    function maybeAs(_type, value) {\n        if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n    }\n    function maybeFrom(_type, value) {\n        if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n    }\n    function arrayLiteral(type) {\n        if (type == \"]\") return cont();\n        return pass(commasep(expressionNoComma, \"]\"));\n    }\n    function enumdef() {\n        return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n    }\n    function enummember() {\n        return pass(pattern, maybeAssign);\n    }\n\n    function isContinuedStatement(state, textAfter) {\n        return state.lastType == \"operator\" || state.lastType == \",\" ||\n            isOperatorChar.test(textAfter.charAt(0)) ||\n            /[,.]/.test(textAfter.charAt(0));\n    }\n\n    function expressionAllowed(stream, state, backUp) {\n        return state.tokenize == tokenBase &&\n            /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n            (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n    }\n\n    // Interface\n\n    return {\n        startState: function (indentUnit) {\n            var state = {\n                tokenize: tokenBase,\n                lastType: \"sof\",\n                cc: [],\n                lexical: new JSLexical(-indentUnit, 0, \"block\", false),\n                localVars: parserConfig.localVars,\n                context: parserConfig.localVars && new Context(null, null, false),\n                indented: 0\n            };\n            if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n                state.globalVars = parserConfig.globalVars;\n            return state;\n        },\n\n        token: function (stream, state) {\n            if (stream.sol()) {\n                if (!state.lexical.hasOwnProperty(\"align\"))\n                    state.lexical.align = false;\n                state.indented = stream.indentation();\n                findFatArrow(stream, state);\n            }\n            if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n            var style = state.tokenize(stream, state);\n            if (type == \"comment\") return style;\n            state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n            return parseJS(state, style, type, content, stream);\n        },\n\n        indent: function (state, textAfter, cx) {\n            if (state.tokenize == tokenComment || state.tokenize == tokenQuasi) return null;\n            if (state.tokenize != tokenBase) return 0;\n            var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n            // Kludge to prevent 'maybelse' from blocking lexical scope pops\n            if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n                var c = state.cc[i];\n                if (c == poplex) lexical = lexical.prev;\n                else if (c != maybeelse) break;\n            }\n            while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n                (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                    (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                    !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n                lexical = lexical.prev;\n            if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n                lexical = lexical.prev;\n            var type = lexical.type, closing = firstChar == type;\n\n            if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n            else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n            else if (type == \"form\") return lexical.indented + cx.unit;\n            else if (type == \"stat\")\n                return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || cx.unit : 0);\n            else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n                return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? cx.unit : 2 * cx.unit);\n            else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n            else return lexical.indented + (closing ? 0 : cx.unit);\n        },\n\n        languageData: {\n            indentOnInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n            commentTokens: jsonMode ? undefined : { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n            closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n            wordChars: \"$\"\n        }\n    };\n};\n\nexport const arabJsMode = mkJavaScript({})\nexport const json = mkJavaScript({ json: true })\nexport const jsonld = mkJavaScript({ jsonld: true })\nexport const typescript = mkJavaScript({ typescript: true })",{"ruleId":"382","replacedBy":"383"},{"ruleId":"384","replacedBy":"385"},{"ruleId":"386","severity":1,"message":"387","line":27,"column":8,"nodeType":"388","endLine":27,"endColumn":10,"suggestions":"389"},{"ruleId":"386","severity":1,"message":"390","line":27,"column":8,"nodeType":"388","endLine":27,"endColumn":10,"suggestions":"391"},{"ruleId":"392","severity":1,"message":"393","line":6,"column":8,"nodeType":"394","messageId":"395","endLine":6,"endColumn":14},{"ruleId":"396","severity":1,"message":"397","line":37,"column":26,"nodeType":"398","messageId":"399","endLine":37,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":38,"column":26,"nodeType":"398","messageId":"399","endLine":38,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":39,"column":40,"nodeType":"398","messageId":"399","endLine":39,"endColumn":42},{"ruleId":"396","severity":1,"message":"397","line":41,"column":40,"nodeType":"398","messageId":"399","endLine":41,"endColumn":42},{"ruleId":"396","severity":1,"message":"397","line":54,"column":16,"nodeType":"398","messageId":"399","endLine":54,"endColumn":18},{"ruleId":"396","severity":1,"message":"397","line":54,"column":29,"nodeType":"398","messageId":"399","endLine":54,"endColumn":31},{"ruleId":"396","severity":1,"message":"397","line":57,"column":23,"nodeType":"398","messageId":"399","endLine":57,"endColumn":25},{"ruleId":"400","severity":1,"message":"401","line":57,"column":65,"nodeType":"402","messageId":"403","endLine":57,"endColumn":66,"suggestions":"404"},{"ruleId":"396","severity":1,"message":"397","line":59,"column":23,"nodeType":"398","messageId":"399","endLine":59,"endColumn":25},{"ruleId":"400","severity":1,"message":"405","line":61,"column":22,"nodeType":"402","messageId":"403","endLine":61,"endColumn":23,"suggestions":"406"},{"ruleId":"400","severity":1,"message":"407","line":61,"column":28,"nodeType":"402","messageId":"403","endLine":61,"endColumn":29,"suggestions":"408"},{"ruleId":"400","severity":1,"message":"409","line":61,"column":30,"nodeType":"402","messageId":"403","endLine":61,"endColumn":31,"suggestions":"410"},{"ruleId":"400","severity":1,"message":"411","line":61,"column":34,"nodeType":"402","messageId":"403","endLine":61,"endColumn":35,"suggestions":"412"},{"ruleId":"400","severity":1,"message":"413","line":61,"column":36,"nodeType":"402","messageId":"403","endLine":61,"endColumn":37,"suggestions":"414"},{"ruleId":"396","severity":1,"message":"397","line":63,"column":23,"nodeType":"398","messageId":"399","endLine":63,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":65,"column":23,"nodeType":"398","messageId":"399","endLine":65,"endColumn":25},{"ruleId":"400","severity":1,"message":"401","line":68,"column":61,"nodeType":"402","messageId":"403","endLine":68,"endColumn":62,"suggestions":"415"},{"ruleId":"396","severity":1,"message":"397","line":70,"column":23,"nodeType":"398","messageId":"399","endLine":70,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":85,"column":23,"nodeType":"398","messageId":"399","endLine":85,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":88,"column":23,"nodeType":"398","messageId":"399","endLine":88,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":88,"column":47,"nodeType":"398","messageId":"399","endLine":88,"endColumn":49},{"ruleId":"396","severity":1,"message":"397","line":91,"column":23,"nodeType":"398","messageId":"399","endLine":91,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":93,"column":23,"nodeType":"398","messageId":"399","endLine":93,"endColumn":25},{"ruleId":"416","severity":1,"message":"417","line":93,"column":30,"nodeType":"418","messageId":"419","endLine":93,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":93,"column":53,"nodeType":"418","messageId":"419","endLine":93,"endColumn":55},{"ruleId":"396","severity":1,"message":"397","line":94,"column":17,"nodeType":"398","messageId":"399","endLine":94,"endColumn":19},{"ruleId":"396","severity":1,"message":"420","line":98,"column":20,"nodeType":"398","messageId":"399","endLine":98,"endColumn":22},{"ruleId":"396","severity":1,"message":"420","line":98,"column":67,"nodeType":"398","messageId":"399","endLine":98,"endColumn":69},{"ruleId":"396","severity":1,"message":"397","line":100,"column":28,"nodeType":"398","messageId":"399","endLine":100,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":100,"column":41,"nodeType":"398","messageId":"399","endLine":100,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":103,"column":28,"nodeType":"398","messageId":"399","endLine":103,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":106,"column":20,"nodeType":"398","messageId":"399","endLine":106,"endColumn":22},{"ruleId":"396","severity":1,"message":"420","line":111,"column":32,"nodeType":"398","messageId":"399","endLine":111,"endColumn":34},{"ruleId":"396","severity":1,"message":"397","line":116,"column":26,"nodeType":"398","messageId":"399","endLine":116,"endColumn":28},{"ruleId":"400","severity":1,"message":"405","line":116,"column":87,"nodeType":"402","messageId":"403","endLine":116,"endColumn":88,"suggestions":"421"},{"ruleId":"400","severity":1,"message":"407","line":116,"column":89,"nodeType":"402","messageId":"403","endLine":116,"endColumn":90,"suggestions":"422"},{"ruleId":"396","severity":1,"message":"397","line":126,"column":45,"nodeType":"398","messageId":"399","endLine":126,"endColumn":47},{"ruleId":"396","severity":1,"message":"397","line":131,"column":26,"nodeType":"398","messageId":"399","endLine":131,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":132,"column":44,"nodeType":"398","messageId":"399","endLine":132,"endColumn":46},{"ruleId":"423","severity":1,"message":"424","line":141,"column":16,"nodeType":"425","messageId":"426","endLine":141,"endColumn":34},{"ruleId":"396","severity":1,"message":"397","line":142,"column":20,"nodeType":"398","messageId":"399","endLine":142,"endColumn":22},{"ruleId":"396","severity":1,"message":"397","line":146,"column":28,"nodeType":"398","messageId":"399","endLine":146,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":154,"column":35,"nodeType":"398","messageId":"399","endLine":154,"endColumn":37},{"ruleId":"416","severity":1,"message":"427","line":154,"column":42,"nodeType":"418","messageId":"419","endLine":154,"endColumn":44},{"ruleId":"396","severity":1,"message":"397","line":154,"column":50,"nodeType":"398","messageId":"399","endLine":154,"endColumn":52},{"ruleId":"416","severity":1,"message":"427","line":154,"column":57,"nodeType":"418","messageId":"419","endLine":154,"endColumn":59},{"ruleId":"396","severity":1,"message":"397","line":158,"column":40,"nodeType":"398","messageId":"399","endLine":158,"endColumn":42},{"ruleId":"396","severity":1,"message":"397","line":187,"column":29,"nodeType":"398","messageId":"399","endLine":187,"endColumn":31},{"ruleId":"396","severity":1,"message":"397","line":187,"column":44,"nodeType":"398","messageId":"399","endLine":187,"endColumn":46},{"ruleId":"400","severity":1,"message":"428","line":192,"column":28,"nodeType":"402","messageId":"403","endLine":192,"endColumn":29,"suggestions":"429"},{"ruleId":"396","severity":1,"message":"397","line":194,"column":29,"nodeType":"398","messageId":"399","endLine":194,"endColumn":31},{"ruleId":"396","severity":1,"message":"397","line":196,"column":30,"nodeType":"398","messageId":"399","endLine":196,"endColumn":32},{"ruleId":"396","severity":1,"message":"420","line":196,"column":69,"nodeType":"398","messageId":"399","endLine":196,"endColumn":71},{"ruleId":"396","severity":1,"message":"397","line":221,"column":24,"nodeType":"398","messageId":"399","endLine":221,"endColumn":26},{"ruleId":"430","severity":1,"message":"431","line":223,"column":22,"nodeType":"394","messageId":"432","endLine":223,"endColumn":23},{"ruleId":"396","severity":1,"message":"397","line":224,"column":28,"nodeType":"398","messageId":"399","endLine":224,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":243,"column":26,"nodeType":"398","messageId":"399","endLine":243,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":260,"column":54,"nodeType":"398","messageId":"399","endLine":260,"endColumn":56},{"ruleId":"396","severity":1,"message":"397","line":267,"column":36,"nodeType":"398","messageId":"399","endLine":267,"endColumn":38},{"ruleId":"396","severity":1,"message":"397","line":289,"column":23,"nodeType":"398","messageId":"399","endLine":289,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":299,"column":21,"nodeType":"398","messageId":"399","endLine":299,"endColumn":23},{"ruleId":"396","severity":1,"message":"397","line":299,"column":41,"nodeType":"398","messageId":"399","endLine":299,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":299,"column":62,"nodeType":"398","messageId":"399","endLine":299,"endColumn":64},{"ruleId":"396","severity":1,"message":"397","line":299,"column":85,"nodeType":"398","messageId":"399","endLine":299,"endColumn":87},{"ruleId":"396","severity":1,"message":"397","line":299,"column":107,"nodeType":"398","messageId":"399","endLine":299,"endColumn":109},{"ruleId":"396","severity":1,"message":"397","line":324,"column":36,"nodeType":"398","messageId":"399","endLine":324,"endColumn":38},{"ruleId":"396","severity":1,"message":"397","line":325,"column":70,"nodeType":"398","messageId":"399","endLine":325,"endColumn":72},{"ruleId":"396","severity":1,"message":"397","line":335,"column":36,"nodeType":"398","messageId":"399","endLine":335,"endColumn":38},{"ruleId":"396","severity":1,"message":"397","line":344,"column":22,"nodeType":"398","messageId":"399","endLine":344,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":345,"column":29,"nodeType":"398","messageId":"399","endLine":345,"endColumn":31},{"ruleId":"396","severity":1,"message":"397","line":345,"column":44,"nodeType":"398","messageId":"399","endLine":345,"endColumn":46},{"ruleId":"396","severity":1,"message":"397","line":345,"column":59,"nodeType":"398","messageId":"399","endLine":345,"endColumn":61},{"ruleId":"396","severity":1,"message":"397","line":345,"column":74,"nodeType":"398","messageId":"399","endLine":345,"endColumn":76},{"ruleId":"396","severity":1,"message":"397","line":352,"column":18,"nodeType":"398","messageId":"399","endLine":352,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":353,"column":18,"nodeType":"398","messageId":"399","endLine":353,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":354,"column":18,"nodeType":"398","messageId":"399","endLine":354,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":355,"column":18,"nodeType":"398","messageId":"399","endLine":355,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":356,"column":18,"nodeType":"398","messageId":"399","endLine":356,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":357,"column":18,"nodeType":"398","messageId":"399","endLine":357,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":358,"column":18,"nodeType":"398","messageId":"399","endLine":358,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":359,"column":18,"nodeType":"398","messageId":"399","endLine":359,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":360,"column":39,"nodeType":"398","messageId":"399","endLine":360,"endColumn":41},{"ruleId":"396","severity":1,"message":"397","line":360,"column":88,"nodeType":"398","messageId":"399","endLine":360,"endColumn":90},{"ruleId":"396","severity":1,"message":"397","line":364,"column":18,"nodeType":"398","messageId":"399","endLine":364,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":365,"column":18,"nodeType":"398","messageId":"399","endLine":365,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":366,"column":18,"nodeType":"398","messageId":"399","endLine":366,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":366,"column":47,"nodeType":"398","messageId":"399","endLine":366,"endColumn":49},{"ruleId":"396","severity":1,"message":"397","line":368,"column":46,"nodeType":"398","messageId":"399","endLine":368,"endColumn":48},{"ruleId":"396","severity":1,"message":"397","line":370,"column":18,"nodeType":"398","messageId":"399","endLine":370,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":371,"column":31,"nodeType":"398","messageId":"399","endLine":371,"endColumn":33},{"ruleId":"396","severity":1,"message":"397","line":374,"column":39,"nodeType":"398","messageId":"399","endLine":374,"endColumn":41},{"ruleId":"396","severity":1,"message":"397","line":374,"column":60,"nodeType":"398","messageId":"399","endLine":374,"endColumn":62},{"ruleId":"396","severity":1,"message":"397","line":374,"column":79,"nodeType":"398","messageId":"399","endLine":374,"endColumn":81},{"ruleId":"396","severity":1,"message":"397","line":376,"column":27,"nodeType":"398","messageId":"399","endLine":376,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":377,"column":32,"nodeType":"398","messageId":"399","endLine":377,"endColumn":34},{"ruleId":"396","severity":1,"message":"397","line":379,"column":38,"nodeType":"398","messageId":"399","endLine":379,"endColumn":40},{"ruleId":"396","severity":1,"message":"397","line":382,"column":38,"nodeType":"398","messageId":"399","endLine":382,"endColumn":40},{"ruleId":"396","severity":1,"message":"397","line":389,"column":18,"nodeType":"398","messageId":"399","endLine":389,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":391,"column":18,"nodeType":"398","messageId":"399","endLine":391,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":392,"column":18,"nodeType":"398","messageId":"399","endLine":392,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":393,"column":18,"nodeType":"398","messageId":"399","endLine":393,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":394,"column":18,"nodeType":"398","messageId":"399","endLine":394,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":395,"column":18,"nodeType":"398","messageId":"399","endLine":395,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":396,"column":18,"nodeType":"398","messageId":"399","endLine":396,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":397,"column":19,"nodeType":"398","messageId":"399","endLine":397,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":401,"column":18,"nodeType":"398","messageId":"399","endLine":401,"endColumn":20},{"ruleId":"396","severity":1,"message":"420","line":410,"column":18,"nodeType":"398","messageId":"399","endLine":410,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":414,"column":33,"nodeType":"398","messageId":"399","endLine":414,"endColumn":35},{"ruleId":"396","severity":1,"message":"397","line":416,"column":22,"nodeType":"398","messageId":"399","endLine":416,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":417,"column":27,"nodeType":"398","messageId":"399","endLine":417,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":422,"column":18,"nodeType":"398","messageId":"399","endLine":422,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":423,"column":18,"nodeType":"398","messageId":"399","endLine":423,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":423,"column":47,"nodeType":"398","messageId":"399","endLine":423,"endColumn":49},{"ruleId":"396","severity":1,"message":"397","line":424,"column":18,"nodeType":"398","messageId":"399","endLine":424,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":424,"column":41,"nodeType":"398","messageId":"399","endLine":424,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":425,"column":18,"nodeType":"398","messageId":"399","endLine":425,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":426,"column":18,"nodeType":"398","messageId":"399","endLine":426,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":426,"column":40,"nodeType":"398","messageId":"399","endLine":426,"endColumn":42},{"ruleId":"396","severity":1,"message":"397","line":427,"column":18,"nodeType":"398","messageId":"399","endLine":427,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":428,"column":18,"nodeType":"398","messageId":"399","endLine":428,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":429,"column":18,"nodeType":"398","messageId":"399","endLine":429,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":430,"column":18,"nodeType":"398","messageId":"399","endLine":430,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":431,"column":18,"nodeType":"398","messageId":"399","endLine":431,"endColumn":20},{"ruleId":"400","severity":1,"message":"433","line":435,"column":27,"nodeType":"402","messageId":"403","endLine":435,"endColumn":28,"suggestions":"434"},{"ruleId":"400","severity":1,"message":"409","line":435,"column":29,"nodeType":"402","messageId":"403","endLine":435,"endColumn":30,"suggestions":"435"},{"ruleId":"396","severity":1,"message":"397","line":440,"column":18,"nodeType":"398","messageId":"399","endLine":440,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":444,"column":26,"nodeType":"398","messageId":"399","endLine":444,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":445,"column":28,"nodeType":"398","messageId":"399","endLine":445,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":446,"column":18,"nodeType":"398","messageId":"399","endLine":446,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":447,"column":18,"nodeType":"398","messageId":"399","endLine":447,"endColumn":20},{"ruleId":"416","severity":1,"message":"427","line":448,"column":39,"nodeType":"418","messageId":"419","endLine":448,"endColumn":41},{"ruleId":"416","severity":1,"message":"427","line":448,"column":47,"nodeType":"418","messageId":"419","endLine":448,"endColumn":49},{"ruleId":"396","severity":1,"message":"397","line":448,"column":56,"nodeType":"398","messageId":"399","endLine":448,"endColumn":58},{"ruleId":"396","severity":1,"message":"397","line":449,"column":31,"nodeType":"398","messageId":"399","endLine":449,"endColumn":33},{"ruleId":"396","severity":1,"message":"397","line":451,"column":23,"nodeType":"398","messageId":"399","endLine":451,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":454,"column":18,"nodeType":"398","messageId":"399","endLine":454,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":455,"column":18,"nodeType":"398","messageId":"399","endLine":455,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":456,"column":18,"nodeType":"398","messageId":"399","endLine":456,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":457,"column":18,"nodeType":"398","messageId":"399","endLine":457,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":458,"column":18,"nodeType":"398","messageId":"399","endLine":458,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":459,"column":27,"nodeType":"398","messageId":"399","endLine":459,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":460,"column":18,"nodeType":"398","messageId":"399","endLine":460,"endColumn":20},{"ruleId":"396","severity":1,"message":"420","line":467,"column":18,"nodeType":"398","messageId":"399","endLine":467,"endColumn":20},{"ruleId":"396","severity":1,"message":"420","line":468,"column":43,"nodeType":"398","messageId":"399","endLine":468,"endColumn":45},{"ruleId":"396","severity":1,"message":"397","line":472,"column":18,"nodeType":"398","messageId":"399","endLine":472,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":480,"column":26,"nodeType":"398","messageId":"399","endLine":480,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":484,"column":26,"nodeType":"398","messageId":"399","endLine":484,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":488,"column":22,"nodeType":"398","messageId":"399","endLine":488,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":489,"column":27,"nodeType":"398","messageId":"399","endLine":489,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":494,"column":19,"nodeType":"398","messageId":"399","endLine":494,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":497,"column":19,"nodeType":"398","messageId":"399","endLine":497,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":500,"column":18,"nodeType":"398","messageId":"399","endLine":500,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":504,"column":18,"nodeType":"398","messageId":"399","endLine":504,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":507,"column":18,"nodeType":"398","messageId":"399","endLine":507,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":510,"column":25,"nodeType":"398","messageId":"399","endLine":510,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":510,"column":51,"nodeType":"398","messageId":"399","endLine":510,"endColumn":53},{"ruleId":"396","severity":1,"message":"397","line":512,"column":23,"nodeType":"398","messageId":"399","endLine":512,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":512,"column":41,"nodeType":"398","messageId":"399","endLine":512,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":514,"column":45,"nodeType":"398","messageId":"399","endLine":514,"endColumn":47},{"ruleId":"396","severity":1,"message":"397","line":517,"column":25,"nodeType":"398","messageId":"399","endLine":517,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":517,"column":45,"nodeType":"398","messageId":"399","endLine":517,"endColumn":47},{"ruleId":"396","severity":1,"message":"397","line":520,"column":25,"nodeType":"398","messageId":"399","endLine":520,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":525,"column":25,"nodeType":"398","messageId":"399","endLine":525,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":527,"column":25,"nodeType":"398","messageId":"399","endLine":527,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":529,"column":26,"nodeType":"398","messageId":"399","endLine":529,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":532,"column":25,"nodeType":"398","messageId":"399","endLine":532,"endColumn":27},{"ruleId":"396","severity":1,"message":"420","line":537,"column":18,"nodeType":"398","messageId":"399","endLine":537,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":542,"column":18,"nodeType":"398","messageId":"399","endLine":542,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":543,"column":18,"nodeType":"398","messageId":"399","endLine":543,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":547,"column":53,"nodeType":"398","messageId":"399","endLine":547,"endColumn":55},{"ruleId":"396","severity":1,"message":"397","line":549,"column":30,"nodeType":"398","messageId":"399","endLine":549,"endColumn":32},{"ruleId":"396","severity":1,"message":"397","line":551,"column":30,"nodeType":"398","messageId":"399","endLine":551,"endColumn":32},{"ruleId":"396","severity":1,"message":"397","line":551,"column":46,"nodeType":"398","messageId":"399","endLine":551,"endColumn":48},{"ruleId":"396","severity":1,"message":"397","line":555,"column":22,"nodeType":"398","messageId":"399","endLine":555,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":555,"column":38,"nodeType":"398","messageId":"399","endLine":555,"endColumn":40},{"ruleId":"396","severity":1,"message":"397","line":560,"column":22,"nodeType":"398","messageId":"399","endLine":560,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":560,"column":38,"nodeType":"398","messageId":"399","endLine":560,"endColumn":40},{"ruleId":"396","severity":1,"message":"397","line":570,"column":18,"nodeType":"398","messageId":"399","endLine":570,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":575,"column":22,"nodeType":"398","messageId":"399","endLine":575,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":576,"column":23,"nodeType":"398","messageId":"399","endLine":576,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":580,"column":27,"nodeType":"398","messageId":"399","endLine":580,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":580,"column":43,"nodeType":"398","messageId":"399","endLine":580,"endColumn":45},{"ruleId":"396","severity":1,"message":"397","line":583,"column":26,"nodeType":"398","messageId":"399","endLine":583,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":589,"column":19,"nodeType":"398","messageId":"399","endLine":589,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":595,"column":19,"nodeType":"398","messageId":"399","endLine":595,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":595,"column":39,"nodeType":"398","messageId":"399","endLine":595,"endColumn":41},{"ruleId":"396","severity":1,"message":"397","line":595,"column":60,"nodeType":"398","messageId":"399","endLine":595,"endColumn":62},{"ruleId":"396","severity":1,"message":"397","line":597,"column":31,"nodeType":"398","messageId":"399","endLine":597,"endColumn":33},{"ruleId":"396","severity":1,"message":"397","line":599,"column":18,"nodeType":"398","messageId":"399","endLine":599,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":599,"column":41,"nodeType":"398","messageId":"399","endLine":599,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":603,"column":19,"nodeType":"398","messageId":"399","endLine":603,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":603,"column":35,"nodeType":"398","messageId":"399","endLine":603,"endColumn":37},{"ruleId":"396","severity":1,"message":"397","line":604,"column":18,"nodeType":"398","messageId":"399","endLine":604,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":604,"column":38,"nodeType":"398","messageId":"399","endLine":604,"endColumn":40},{"ruleId":"396","severity":1,"message":"397","line":604,"column":58,"nodeType":"398","messageId":"399","endLine":604,"endColumn":60},{"ruleId":"396","severity":1,"message":"397","line":605,"column":18,"nodeType":"398","messageId":"399","endLine":605,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":606,"column":18,"nodeType":"398","messageId":"399","endLine":606,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":607,"column":18,"nodeType":"398","messageId":"399","endLine":607,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":608,"column":18,"nodeType":"398","messageId":"399","endLine":608,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":611,"column":18,"nodeType":"398","messageId":"399","endLine":611,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":614,"column":18,"nodeType":"398","messageId":"399","endLine":614,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":615,"column":18,"nodeType":"398","messageId":"399","endLine":615,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":615,"column":33,"nodeType":"398","messageId":"399","endLine":615,"endColumn":35},{"ruleId":"396","severity":1,"message":"397","line":619,"column":18,"nodeType":"398","messageId":"399","endLine":619,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":619,"column":44,"nodeType":"398","messageId":"399","endLine":619,"endColumn":46},{"ruleId":"396","severity":1,"message":"397","line":622,"column":26,"nodeType":"398","messageId":"399","endLine":622,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":622,"column":41,"nodeType":"398","messageId":"399","endLine":622,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":622,"column":61,"nodeType":"398","messageId":"399","endLine":622,"endColumn":63},{"ruleId":"396","severity":1,"message":"397","line":624,"column":25,"nodeType":"398","messageId":"399","endLine":624,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":626,"column":25,"nodeType":"398","messageId":"399","endLine":626,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":628,"column":25,"nodeType":"398","messageId":"399","endLine":628,"endColumn":27},{"ruleId":"396","severity":1,"message":"397","line":633,"column":18,"nodeType":"398","messageId":"399","endLine":633,"endColumn":20},{"ruleId":"416","severity":1,"message":"417","line":633,"column":32,"nodeType":"418","messageId":"419","endLine":633,"endColumn":34},{"ruleId":"416","severity":1,"message":"417","line":633,"column":70,"nodeType":"418","messageId":"419","endLine":633,"endColumn":72},{"ruleId":"396","severity":1,"message":"397","line":633,"column":79,"nodeType":"398","messageId":"399","endLine":633,"endColumn":81},{"ruleId":"396","severity":1,"message":"397","line":634,"column":18,"nodeType":"398","messageId":"399","endLine":634,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":635,"column":18,"nodeType":"398","messageId":"399","endLine":635,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":639,"column":19,"nodeType":"398","messageId":"399","endLine":639,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":640,"column":19,"nodeType":"398","messageId":"399","endLine":640,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":640,"column":34,"nodeType":"398","messageId":"399","endLine":640,"endColumn":36},{"ruleId":"396","severity":1,"message":"397","line":640,"column":50,"nodeType":"398","messageId":"399","endLine":640,"endColumn":52},{"ruleId":"396","severity":1,"message":"397","line":641,"column":18,"nodeType":"398","messageId":"399","endLine":641,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":642,"column":19,"nodeType":"398","messageId":"399","endLine":642,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":642,"column":41,"nodeType":"398","messageId":"399","endLine":642,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":643,"column":19,"nodeType":"398","messageId":"399","endLine":643,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":646,"column":19,"nodeType":"398","messageId":"399","endLine":646,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":652,"column":19,"nodeType":"398","messageId":"399","endLine":652,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":655,"column":19,"nodeType":"398","messageId":"399","endLine":655,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":660,"column":18,"nodeType":"398","messageId":"399","endLine":660,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":661,"column":18,"nodeType":"398","messageId":"399","endLine":661,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":662,"column":18,"nodeType":"398","messageId":"399","endLine":662,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":663,"column":18,"nodeType":"398","messageId":"399","endLine":663,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":666,"column":18,"nodeType":"398","messageId":"399","endLine":666,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":670,"column":18,"nodeType":"398","messageId":"399","endLine":670,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":671,"column":18,"nodeType":"398","messageId":"399","endLine":671,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":672,"column":18,"nodeType":"398","messageId":"399","endLine":672,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":673,"column":18,"nodeType":"398","messageId":"399","endLine":673,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":680,"column":19,"nodeType":"398","messageId":"399","endLine":680,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":683,"column":18,"nodeType":"398","messageId":"399","endLine":683,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":686,"column":18,"nodeType":"398","messageId":"399","endLine":686,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":686,"column":42,"nodeType":"398","messageId":"399","endLine":686,"endColumn":44},{"ruleId":"396","severity":1,"message":"397","line":689,"column":19,"nodeType":"398","messageId":"399","endLine":689,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":690,"column":18,"nodeType":"398","messageId":"399","endLine":690,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":693,"column":18,"nodeType":"398","messageId":"399","endLine":693,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":694,"column":18,"nodeType":"398","messageId":"399","endLine":694,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":698,"column":18,"nodeType":"398","messageId":"399","endLine":698,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":699,"column":18,"nodeType":"398","messageId":"399","endLine":699,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":700,"column":19,"nodeType":"398","messageId":"399","endLine":700,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":700,"column":36,"nodeType":"398","messageId":"399","endLine":700,"endColumn":38},{"ruleId":"396","severity":1,"message":"397","line":704,"column":19,"nodeType":"398","messageId":"399","endLine":704,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":705,"column":18,"nodeType":"398","messageId":"399","endLine":705,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":706,"column":18,"nodeType":"398","messageId":"399","endLine":706,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":707,"column":27,"nodeType":"398","messageId":"399","endLine":707,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":710,"column":19,"nodeType":"398","messageId":"399","endLine":710,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":711,"column":18,"nodeType":"398","messageId":"399","endLine":711,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":712,"column":18,"nodeType":"398","messageId":"399","endLine":712,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":713,"column":27,"nodeType":"398","messageId":"399","endLine":713,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":716,"column":18,"nodeType":"398","messageId":"399","endLine":716,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":716,"column":39,"nodeType":"398","messageId":"399","endLine":716,"endColumn":41},{"ruleId":"396","severity":1,"message":"397","line":719,"column":26,"nodeType":"398","messageId":"399","endLine":719,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":724,"column":19,"nodeType":"398","messageId":"399","endLine":724,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":725,"column":18,"nodeType":"398","messageId":"399","endLine":725,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":727,"column":26,"nodeType":"398","messageId":"399","endLine":727,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":732,"column":18,"nodeType":"398","messageId":"399","endLine":732,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":736,"column":18,"nodeType":"398","messageId":"399","endLine":736,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":739,"column":19,"nodeType":"398","messageId":"399","endLine":739,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":740,"column":19,"nodeType":"398","messageId":"399","endLine":740,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":740,"column":41,"nodeType":"398","messageId":"399","endLine":740,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":740,"column":74,"nodeType":"398","messageId":"399","endLine":740,"endColumn":76},{"ruleId":"396","severity":1,"message":"397","line":741,"column":23,"nodeType":"398","messageId":"399","endLine":741,"endColumn":25},{"ruleId":"396","severity":1,"message":"397","line":744,"column":18,"nodeType":"398","messageId":"399","endLine":744,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":747,"column":18,"nodeType":"398","messageId":"399","endLine":747,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":748,"column":19,"nodeType":"398","messageId":"399","endLine":748,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":749,"column":24,"nodeType":"398","messageId":"399","endLine":749,"endColumn":26},{"ruleId":"396","severity":1,"message":"397","line":749,"column":45,"nodeType":"398","messageId":"399","endLine":749,"endColumn":47},{"ruleId":"396","severity":1,"message":"397","line":749,"column":63,"nodeType":"398","messageId":"399","endLine":749,"endColumn":65},{"ruleId":"396","severity":1,"message":"397","line":754,"column":18,"nodeType":"398","messageId":"399","endLine":754,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":754,"column":44,"nodeType":"398","messageId":"399","endLine":754,"endColumn":46},{"ruleId":"396","severity":1,"message":"397","line":758,"column":18,"nodeType":"398","messageId":"399","endLine":758,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":758,"column":38,"nodeType":"398","messageId":"399","endLine":758,"endColumn":40},{"ruleId":"396","severity":1,"message":"397","line":759,"column":18,"nodeType":"398","messageId":"399","endLine":759,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":761,"column":19,"nodeType":"398","messageId":"399","endLine":761,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":765,"column":26,"nodeType":"398","messageId":"399","endLine":765,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":766,"column":18,"nodeType":"398","messageId":"399","endLine":766,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":766,"column":33,"nodeType":"398","messageId":"399","endLine":766,"endColumn":35},{"ruleId":"396","severity":1,"message":"397","line":767,"column":18,"nodeType":"398","messageId":"399","endLine":767,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":768,"column":19,"nodeType":"398","messageId":"399","endLine":768,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":771,"column":19,"nodeType":"398","messageId":"399","endLine":771,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":772,"column":18,"nodeType":"398","messageId":"399","endLine":772,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":773,"column":19,"nodeType":"398","messageId":"399","endLine":773,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":774,"column":84,"nodeType":"398","messageId":"399","endLine":774,"endColumn":86},{"ruleId":"396","severity":1,"message":"397","line":778,"column":19,"nodeType":"398","messageId":"399","endLine":778,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":779,"column":19,"nodeType":"398","messageId":"399","endLine":779,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":780,"column":18,"nodeType":"398","messageId":"399","endLine":780,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":784,"column":19,"nodeType":"398","messageId":"399","endLine":784,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":785,"column":18,"nodeType":"398","messageId":"399","endLine":785,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":788,"column":18,"nodeType":"398","messageId":"399","endLine":788,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":789,"column":18,"nodeType":"398","messageId":"399","endLine":789,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":793,"column":18,"nodeType":"398","messageId":"399","endLine":793,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":794,"column":18,"nodeType":"398","messageId":"399","endLine":794,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":795,"column":19,"nodeType":"398","messageId":"399","endLine":795,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":799,"column":18,"nodeType":"398","messageId":"399","endLine":799,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":802,"column":19,"nodeType":"398","messageId":"399","endLine":802,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":805,"column":19,"nodeType":"398","messageId":"399","endLine":805,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":808,"column":18,"nodeType":"398","messageId":"399","endLine":808,"endColumn":20},{"ruleId":"396","severity":1,"message":"397","line":819,"column":31,"nodeType":"398","messageId":"399","endLine":819,"endColumn":33},{"ruleId":"396","severity":1,"message":"397","line":819,"column":63,"nodeType":"398","messageId":"399","endLine":819,"endColumn":65},{"ruleId":"396","severity":1,"message":"397","line":825,"column":31,"nodeType":"398","messageId":"399","endLine":825,"endColumn":33},{"ruleId":"416","severity":1,"message":"417","line":825,"column":44,"nodeType":"418","messageId":"419","endLine":825,"endColumn":46},{"ruleId":"400","severity":1,"message":"405","line":826,"column":77,"nodeType":"402","messageId":"403","endLine":826,"endColumn":78,"suggestions":"436"},{"ruleId":"400","severity":1,"message":"407","line":826,"column":81,"nodeType":"402","messageId":"403","endLine":826,"endColumn":82,"suggestions":"437"},{"ruleId":"416","severity":1,"message":"417","line":826,"column":115,"nodeType":"418","messageId":"419","endLine":826,"endColumn":117},{"ruleId":"396","severity":1,"message":"397","line":827,"column":29,"nodeType":"398","messageId":"399","endLine":827,"endColumn":31},{"ruleId":"396","severity":1,"message":"420","line":855,"column":32,"nodeType":"398","messageId":"399","endLine":855,"endColumn":34},{"ruleId":"396","severity":1,"message":"397","line":857,"column":22,"nodeType":"398","messageId":"399","endLine":857,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":858,"column":35,"nodeType":"398","messageId":"399","endLine":858,"endColumn":37},{"ruleId":"396","severity":1,"message":"397","line":858,"column":61,"nodeType":"398","messageId":"399","endLine":858,"endColumn":63},{"ruleId":"396","severity":1,"message":"397","line":858,"column":80,"nodeType":"398","messageId":"399","endLine":858,"endColumn":82},{"ruleId":"396","severity":1,"message":"397","line":863,"column":32,"nodeType":"398","messageId":"399","endLine":863,"endColumn":34},{"ruleId":"396","severity":1,"message":"397","line":863,"column":66,"nodeType":"398","messageId":"399","endLine":863,"endColumn":68},{"ruleId":"396","severity":1,"message":"420","line":864,"column":32,"nodeType":"398","messageId":"399","endLine":864,"endColumn":34},{"ruleId":"396","severity":1,"message":"397","line":869,"column":23,"nodeType":"398","messageId":"399","endLine":869,"endColumn":25},{"ruleId":"396","severity":1,"message":"420","line":870,"column":28,"nodeType":"398","messageId":"399","endLine":870,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":872,"column":34,"nodeType":"398","messageId":"399","endLine":872,"endColumn":36},{"ruleId":"396","severity":1,"message":"397","line":872,"column":60,"nodeType":"398","messageId":"399","endLine":872,"endColumn":62},{"ruleId":"396","severity":1,"message":"397","line":873,"column":28,"nodeType":"398","messageId":"399","endLine":873,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":874,"column":26,"nodeType":"398","messageId":"399","endLine":874,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":874,"column":55,"nodeType":"398","messageId":"399","endLine":874,"endColumn":57},{"ruleId":"400","severity":1,"message":"413","line":875,"column":26,"nodeType":"402","messageId":"403","endLine":875,"endColumn":27,"suggestions":"438"},{"ruleId":"400","severity":1,"message":"407","line":875,"column":36,"nodeType":"402","messageId":"403","endLine":875,"endColumn":37,"suggestions":"439"},{"ruleId":"396","severity":1,"message":"397","line":877,"column":49,"nodeType":"398","messageId":"399","endLine":877,"endColumn":51},{"ruleId":"396","severity":1,"message":"397","line":877,"column":77,"nodeType":"398","messageId":"399","endLine":877,"endColumn":79},{"ruleId":"396","severity":1,"message":"397","line":879,"column":58,"nodeType":"398","messageId":"399","endLine":879,"endColumn":60},{"ruleId":"396","severity":1,"message":"397","line":881,"column":22,"nodeType":"398","messageId":"399","endLine":881,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":881,"column":77,"nodeType":"398","messageId":"399","endLine":881,"endColumn":79},{"ruleId":"396","severity":1,"message":"397","line":881,"column":109,"nodeType":"398","messageId":"399","endLine":881,"endColumn":111},{"ruleId":"396","severity":1,"message":"397","line":882,"column":27,"nodeType":"398","messageId":"399","endLine":882,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":882,"column":50,"nodeType":"398","messageId":"399","endLine":882,"endColumn":52},{"ruleId":"396","severity":1,"message":"397","line":883,"column":27,"nodeType":"398","messageId":"399","endLine":883,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":884,"column":27,"nodeType":"398","messageId":"399","endLine":884,"endColumn":29},{"ruleId":"396","severity":1,"message":"397","line":886,"column":35,"nodeType":"398","messageId":"399","endLine":886,"endColumn":37},{"ruleId":"396","severity":1,"message":"420","line":886,"column":94,"nodeType":"398","messageId":"399","endLine":886,"endColumn":96},"no-native-reassign",["440"],"no-negated-in-lhs",["441"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'code', 'editableTagrtl', and 'editor'. Either include them or remove the dependency array.","ArrayExpression",["442"],"React Hook useEffect has missing dependencies: 'code' and 'editableTagltr'. Either include them or remove the dependency array.",["443"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["444","445"],"Unnecessary escape character: \\[.",["446","447"],"Unnecessary escape character: \\(.",["448","449"],"Unnecessary escape character: \\).",["450","451"],"Unnecessary escape character: \\:.",["452","453"],"Unnecessary escape character: \\..",["454","455"],["456","457"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.",["458","459"],["460","461"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Unexpected mix of '||' and '&&'.","Unnecessary escape character: \\/.",["462","463"],"no-redeclare","'v' is already defined.","redeclared","Unnecessary escape character: \\}.",["464","465"],["466","467"],["468","469"],["470","471"],["472","473"],["474","475"],"no-global-assign","no-unsafe-negation",{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"messageId":"480","fix":"481","desc":"482"},{"messageId":"483","fix":"484","desc":"485"},{"messageId":"480","fix":"486","desc":"482"},{"messageId":"483","fix":"487","desc":"485"},{"messageId":"480","fix":"488","desc":"482"},{"messageId":"483","fix":"489","desc":"485"},{"messageId":"480","fix":"490","desc":"482"},{"messageId":"483","fix":"491","desc":"485"},{"messageId":"480","fix":"492","desc":"482"},{"messageId":"483","fix":"493","desc":"485"},{"messageId":"480","fix":"494","desc":"482"},{"messageId":"483","fix":"495","desc":"485"},{"messageId":"480","fix":"496","desc":"482"},{"messageId":"483","fix":"497","desc":"485"},{"messageId":"480","fix":"498","desc":"482"},{"messageId":"483","fix":"499","desc":"485"},{"messageId":"480","fix":"500","desc":"482"},{"messageId":"483","fix":"501","desc":"485"},{"messageId":"480","fix":"502","desc":"482"},{"messageId":"483","fix":"503","desc":"485"},{"messageId":"480","fix":"504","desc":"482"},{"messageId":"483","fix":"505","desc":"485"},{"messageId":"480","fix":"506","desc":"482"},{"messageId":"483","fix":"507","desc":"485"},{"messageId":"480","fix":"508","desc":"482"},{"messageId":"483","fix":"509","desc":"485"},{"messageId":"480","fix":"510","desc":"482"},{"messageId":"483","fix":"511","desc":"485"},{"messageId":"480","fix":"512","desc":"482"},{"messageId":"483","fix":"513","desc":"485"},{"messageId":"480","fix":"514","desc":"482"},{"messageId":"483","fix":"515","desc":"485"},"Update the dependencies array to be: [code, editableTagrtl, editor]",{"range":"516","text":"517"},"Update the dependencies array to be: [code, editableTagltr]",{"range":"518","text":"519"},"removeEscape",{"range":"520","text":"521"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"522","text":"523"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"524","text":"521"},{"range":"525","text":"523"},{"range":"526","text":"521"},{"range":"527","text":"523"},{"range":"528","text":"521"},{"range":"529","text":"523"},{"range":"530","text":"521"},{"range":"531","text":"523"},{"range":"532","text":"521"},{"range":"533","text":"523"},{"range":"534","text":"521"},{"range":"535","text":"523"},{"range":"536","text":"521"},{"range":"537","text":"523"},{"range":"538","text":"521"},{"range":"539","text":"523"},{"range":"540","text":"521"},{"range":"541","text":"523"},{"range":"542","text":"521"},{"range":"543","text":"523"},{"range":"544","text":"521"},{"range":"545","text":"523"},{"range":"546","text":"521"},{"range":"547","text":"523"},{"range":"548","text":"521"},{"range":"549","text":"523"},{"range":"550","text":"521"},{"range":"551","text":"523"},{"range":"552","text":"521"},{"range":"553","text":"523"},[903,905],"[code, editableTagrtl, editor]",[883,885],"[code, editableTagltr]",[2757,2758],"",[2757,2757],"\\",[2936,2937],[2936,2936],[2942,2943],[2942,2942],[2944,2945],[2944,2944],[2948,2949],[2948,2948],[2950,2951],[2950,2950],[3317,3318],[3317,3317],[5559,5560],[5559,5559],[5561,5562],[5561,5561],[8522,8523],[8522,8522],[19347,19348],[19347,19347],[19349,19350],[19349,19349],[36644,36645],[36644,36644],[36648,36649],[36648,36648],[38974,38975],[38974,38974],[38984,38985],[38984,38984]]