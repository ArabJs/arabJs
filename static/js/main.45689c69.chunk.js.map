{"version":3,"sources":["CodeSnippets.js","arabJs/arabJsMode.js","EditorArabJS.js","EditorJS.js","JsConsole.js","App.js","index.js"],"names":["snippets","useStyles","makeStyles","theme","label","display","marginTop","spacing","formControl","margin","minWidth","CodeSnipts","onCodeChange","classes","React","useState","snippet","setSnippet","open","setOpen","className","FormControl","Select","labelId","id","onClose","onOpen","value","onChange","event","target","index","MenuItem","mkJavaScript","parserConfig","type","content","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","style","A","B","C","D","operator","atom","isOperatorChar","isJsonldKeyword","ret","tp","cont","tokenBase","stream","state","quote","ch","next","tokenize","escaped","peek","match","test","eat","tokenComment","skipToEnd","backUp","lastType","string","slice","pos","expressionAllowed","inSet","readRegexp","current","tokenQuasi","eatWhile","start","lexical","word","propertyIsEnumerable","maybeEnd","findFatArrow","fatArrowAt","arrow","indexOf","m","exec","depth","sawSomething","charAt","bracket","atomicTypes","JSLexical","indented","column","align","prev","info","this","inScope","varname","v","localVars","name","cx","context","vars","marked","cc","pass","i","arguments","length","push","apply","inList","list","register","block","newContext","registerVarScoped","Var","globalVars","inner","Context","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","result","indent","outer","lex","poplex","expect","wanted","exp","statement","vardef","parenExpr","maybeexpression","pop","maybeelse","functiondef","forspec","enumdef","typename","typeexpr","pattern","expression","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","hasOwnProperty","classExpression","arrayLiteral","contCommasep","objprop","quasi","targetNoComma","maybeTypeArgs","maybeTarget","me","expr","property","continueQuasi","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","maybetypeOrIn","mayberettype","isKW","afterType","typeprops","typearg","maybeReturnType","typeprop","functiondecl","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","startState","indentUnit","token","sol","indentation","eatSpace","parseJS","textAfter","top","firstChar","c","closing","unit","isContinuedStatement","doubleIndentSwitch","languageData","indentOnInput","commentTokens","undefined","line","close","closeBrackets","brackets","wordChars","arabJsMode","Editor","code","editor","editorRef","useRef","editableTagrtl","Symbol","useEffect","EditorView","EditorState","create","doc","extensions","oneDark","basicSetup","StreamLanguage","define","tagExtension","editable","of","parent","ref","height","dir","EditorNext","editableTagltr","JsConsole","logs","setLogs","Hook","window","console","log","currLogs","Unhook","backgroundColor","filter","variant","button","color","AntSwitch","withStyles","root","width","padding","switchBase","palette","grey","transform","common","white","opacity","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","Switch","App","arabJSCode","setArabJsCode","JScode","setJSCode","setTarget","loadingText","setLoadingText","isArabJSCode","setIsArabJsCode","finalCode","dispatch","update","changes","from","to","insert","changeEditorContent","Typography","component","Grid","container","alignItems","item","localCode","toString","arabJs","transpile","erro","error","Button","startIcon","onClick","run","setTimeout","scrollTo","document","scrollHeight","execute","rtlStyle","plugins","jssPreset","rtl","rootElement","getElementById","ReactDOM","render","StrictMode","StylesProvider","jss"],"mappings":"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","file":"static/js/main.45689c69.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\n\nconst snippets = [\n  `اطبع.نص(\"اهلاً بالعالم\")`\n  // \n  ,\n  `\n// متتالية فيبوناتشي\n\nداله متتالية_فيبوناتشي (رقم)\n{  \n  اذا (رقم <= 1 )\n  \tالجواب رقم\n  الجواب  متتالية_فيبوناتشي (رقم - 1) +  متتالية_فيبوناتشي(رقم - 2)\n}\nلنفرض مصفوفة = [1,2,3,4,5]\n\nمصفوفة.لكل(عنصر => اطبع.نص(\"الرقم:\" ,عنصر ,\" النتيجة: \", متتالية_فيبوناتشي(عنصر)))\n`\n  // \n  ,\n  // \n  `\n// ترتيب الدول حسب نسبة الوفاة استناداً\n//على الاصابة بفيروس كورونا المستجد  \nلنفرض الرابط = \"https://covid19-api.com/country/all?format=json\"\nلنفرض حمل_المعلومات = (الرابط) => حمل(الرابط).ثم(البيانات => البيانات.الى_جيسون())\nلنفرض نقح_البيانات = (البيانات) => البيانات.نقح(({country,confirmed,deaths}) => ({الدولة : country , نسبة_الوفاة :deaths/confirmed*100}))\nلنفرض صفي_البيانات = (البيانات) => البيانات.صفي(({نسبة_الوفاة}) => !رقمي(نسبة_الوفاة))\nلنفرض رتب_الدول = (الدول) => الدول.رتب((الاصغر, الاكبر) => الاصغر.نسبة_الوفاة - الاكبر.نسبة_الوفاة)\n\nحمل_المعلومات(الرابط)\n\t\t.ثم(نقح_البيانات)\n\t\t.ثم(صفي_البيانات)\n\t\t.ثم(رتب_الدول)\n\t\t.ثم(الدول=> اطبع.جدول(الدول))\n\t\t.فشل(الخطأ => اطبع.خلل(الخطأ))\n\n`\n  //\n  ,\n  //\n  `// ترتيب الدول حسب نسبة الوفاة استناداً\n  //على الاصابة بفيروس كورونا المستجد  \n  لنفرض الرابط = \"https://covid19-api.com/country/all?format=json\"\n  لنفرض حمل_المعلومات = (الرابط) => حمل(الرابط).ثم(البيانات => البيانات.الى_جيسون())\n  لنفرض نقح_البيانات = (البيانات) => البيانات.نقح(({country,confirmed,deaths}) =>\n                                                  ({الدولة : country , نسبة_الوفاة :deaths/confirmed*100}))\n  لنفرض صفي_البيانات = (البيانات) => البيانات.صفي(({نسبة_الوفاة}) => !رقمي(نسبة_الوفاة))\n  لنفرض رتب_الدول = (الدول) => الدول.رتب((الاصغر, الاكبر) => الاصغر.نسبة_الوفاة - الاكبر.نسبة_الوفاة)\n  لنفرض الدول_العربية = (الدول) => الدول.صفي(({الدولة}) =>\n                                             [\"Yemen\",\"Tunisia\",\"Syria\",\"Morocco\",\"Libya\",\"Lebanon\",\"Jordan\",\n                                              \"Iraq\",\"Sudan\",\"Algeria\",\"Egypt\",\"Saudi Arabia\", \"Qatar\", \"UAE\" ,\n                                              \"Bahrain\", \"Kuwait\", \"Oman\"].يحتوي(الدولة) )\n  لنفرض d3 = مجهول\n  \n  استورد (\"https://unpkg.com/d3?module\")\n    .ثم(المكتبة =>d3 = المكتبة)\n    .ثم(_=> حمل_المعلومات(الرابط))\n    .ثم(نقح_البيانات)\n    .ثم(صفي_البيانات)\n    .ثم(رتب_الدول)\n    .ثم(الدول_العربية)\n    .ثم(الدول => نمذج_البيانات(الدول))\n    .فشل(الخطأ => اطبع.خلل(الخطأ))\n\n// D3 code in JS\n\n    لنفرض نمذج_البيانات = (الدول) => {\n       margin = {top: 20, right: 20, bottom: 30, left: 40},\n          width = 960 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom;\n      \n       x = d3.scaleBand()\n                .range([0, width])\n                .padding(0.1);\n       y = d3.scaleLinear()\n              .range([height, 0]);\n      \n        d3.select(\".myChart\").html(\"\");\n       svg = d3.select(\".myChart\").append(\"svg\")\n       .attr(\"width\", '100%')\n       .attr(\"height\", '100%')\n       .attr(\"viewBox\", '20 0 910 7000')\n      .attr('preserveAspectRatio','xMinYMin')\n       .append(\"g\")\n          .attr(\"transform\", \n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      \n         x.domain(الدول.map((d)=>  d.الدولة));\n        y.domain([0, d3.max(الدول, (d)=> d.نسبة_الوفاة )]);\n      \n        svg.selectAll(\".bar\")\n            .data(الدول)\n          .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", (d)=>  x(d.الدولة))\n            .attr(\"width\", x.bandwidth())\n            .attr(\"y\", (d)=> y(d.نسبة_الوفاة ))\n            .attr(\"height\", (d)=>  height - y(d.نسبة_الوفاة ))\n            .attr(\"fill\",(d,i)=> d3.interpolateTurbo(i/17))\n\n\n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x));\n\n      \n        svg.append(\"g\")\n            .call(d3.axisLeft(y))\n            .selectAll(\"text\")\n            .attr(\"x\", -10)\n           .style(\"text-anchor\", \"start\");\n    }\n  `\n  \n  ];\n\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    display: \"block\",\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function CodeSnipts({ onCodeChange }) {\n  const classes = useStyles();\n  const [snippet, setSnippet] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setSnippet(event.target.value);\n    const index  = event.target.value;\n    onCodeChange(snippets[index], index === 3 ? \"DOM\": \"console\")\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <label className={classes.label}>\n        أختر برنامج\n      </label>\n      <FormControl className={classes.formControl}>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={snippet}\n          onChange={handleChange}\n        >\n          <MenuItem value={0}>اهلاً بالعالم</MenuItem>\n          <MenuItem value={1}>متتالية فيبوناتشي</MenuItem>\n          <MenuItem value={2}>ترتيب الدول على حسب نسبة الوفياة بكورونا</MenuItem>\n          <MenuItem value={3}>نمذجة نسبة الوفياة للدول العربية</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","//edited version of https://github.com/codemirror/legacy-modes/blob/main/mode/javascript.js\nfunction mkJavaScript(parserConfig) {\n    var statementIndent = parserConfig.statementIndent;\n    var jsonldMode = parserConfig.jsonld;\n    var jsonMode = parserConfig.json || jsonldMode;\n    var isTS = parserConfig.typescript;\n    var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n    // Tokenizer\n\n    var keywords = function () {\n        function kw(type) { return { type: type, style: \"keyword\" }; }\n        var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n        var operator = kw(\"operator\"), atom = { type: \"atom\", style: \"atom\" };\n\n        return {\n            \"if\": kw(\"if\"), \"اذا\": kw(\"if\"), \"مادام\": A, \"while\": A, \"with\": A, \"والا\": B, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n            \"return\": D, \"الجواب\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n            \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"لنفرض\": kw(\"var\"), \"let\": kw(\"var\"),\n            \"function\": kw(\"function\"), \"داله\": kw(\"function\"), \"catch\": kw(\"catch\"),\n            \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n            \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n            \"true\": atom, \"false\": atom, \"null\": atom, \"مجهول\": atom, \"undefined\": atom, \"NaN\": atom, \"رقمي\": atom, \"Infinity\": atom,\n            \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n            \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"استورد\": kw(\"import\"), \"extends\": C,\n            \"await\": C,\n        };\n    }();\n\n    var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n    var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n    function readRegexp(stream) {\n        var escaped = false, next, inSet = false;\n        while ((next = stream.next()) != null) {\n            if (!escaped) {\n                if (next == \"/\" && !inSet) return;\n                if (next == \"[\") inSet = true;\n                else if (inSet && next == \"]\") inSet = false;\n            }\n            escaped = !escaped && next == \"\\\\\";\n        }\n    }\n\n    // Used as scratch variables to communicate multiple values without\n    // consing up tons of objects.\n    var type, content;\n    function ret(tp, style, cont) {\n        type = tp; content = cont;\n        return style;\n    }\n    function tokenBase(stream, state) {\n        var ch = stream.next();\n        if (ch == '\"' || ch == \"'\") {\n            state.tokenize = tokenString(ch);\n            return state.tokenize(stream, state);\n        } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n            return ret(\"number\", \"number\");\n        } else if (ch == \".\" && stream.match(\"..\")) {\n            return ret(\"spread\", \"meta\");\n        } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n            return ret(ch);\n        } else if (ch == \"=\" && stream.eat(\">\")) {\n            return ret(\"=>\", \"operator\");\n        } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n            return ret(\"number\", \"number\");\n        } else if (/\\d/.test(ch)) {\n            stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n            return ret(\"number\", \"number\");\n        } else if (ch == \"/\") {\n            if (stream.eat(\"*\")) {\n                state.tokenize = tokenComment;\n                return tokenComment(stream, state);\n            } else if (stream.eat(\"/\")) {\n                stream.skipToEnd();\n                return ret(\"comment\", \"comment\");\n            } else if (expressionAllowed(stream, state, 1)) {\n                readRegexp(stream);\n                stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n                return ret(\"regexp\", \"string.special\");\n            } else {\n                stream.eat(\"=\");\n                return ret(\"operator\", \"operator\", stream.current());\n            }\n        } else if (ch == \"`\") {\n            state.tokenize = tokenQuasi;\n            return tokenQuasi(stream, state);\n        } else if (ch == \"#\" && stream.peek() == \"!\") {\n            stream.skipToEnd();\n            return ret(\"meta\", \"meta\");\n        } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n            return ret(\"variable\", \"property\")\n        } else if (ch == \"<\" && stream.match(\"!--\") ||\n            (ch == \"-\" && stream.match(\"->\") && !/\\S/.test(stream.string.slice(0, stream.start)))) {\n            stream.skipToEnd()\n            return ret(\"comment\", \"comment\")\n        } else if (isOperatorChar.test(ch)) {\n            if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n                if (stream.eat(\"=\")) {\n                    if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n                } else if (/[<>*+\\-|&?]/.test(ch)) {\n                    stream.eat(ch)\n                    if (ch == \">\") stream.eat(ch)\n                }\n            }\n            if (ch == \"?\" && stream.eat(\".\")) return ret(\".\")\n            return ret(\"operator\", \"operator\", stream.current());\n        } else if (wordRE.test(ch)) {\n            stream.eatWhile(wordRE);\n            var word = stream.current()\n            if (state.lastType != \".\") {\n                if (keywords.propertyIsEnumerable(word)) {\n                    var kw = keywords[word]\n                    return ret(kw.type, kw.style, word)\n                }\n                if (word == \"async\" && stream.match(/^(\\s|\\/\\*([^*]|\\*(?!\\/))*?\\*\\/)*[\\[\\(\\w]/, false))\n                    return ret(\"async\", \"keyword\", word)\n            }\n            return ret(\"variable\", \"variable\", word)\n        }\n    }\n\n    function tokenString(quote) {\n        return function (stream, state) {\n            var escaped = false, next;\n            if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)) {\n                state.tokenize = tokenBase;\n                return ret(\"jsonld-keyword\", \"meta\");\n            }\n            while ((next = stream.next()) != null) {\n                if (next == quote && !escaped) break;\n                escaped = !escaped && next == \"\\\\\";\n            }\n            if (!escaped) state.tokenize = tokenBase;\n            return ret(\"string\", \"string\");\n        };\n    }\n\n    function tokenComment(stream, state) {\n        var maybeEnd = false, ch;\n        while (ch = stream.next()) {\n            if (ch == \"/\" && maybeEnd) {\n                state.tokenize = tokenBase;\n                break;\n            }\n            maybeEnd = (ch == \"*\");\n        }\n        return ret(\"comment\", \"comment\");\n    }\n\n    function tokenQuasi(stream, state) {\n        var escaped = false, next;\n        while ((next = stream.next()) != null) {\n            if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n                state.tokenize = tokenBase;\n                break;\n            }\n            escaped = !escaped && next == \"\\\\\";\n        }\n        return ret(\"quasi\", \"string.special\", stream.current());\n    }\n\n    var brackets = \"([{}])\";\n    // This is a crude lookahead trick to try and notice that we're\n    // parsing the argument patterns for a fat-arrow function before we\n    // actually hit the arrow token. It only works if the arrow is on\n    // the same line as the arguments and there's no strange noise\n    // (comments) in between. Fallback is to only notice when we hit the\n    // arrow, and not declare the arguments as locals for the arrow\n    // body.\n    function findFatArrow(stream, state) {\n        if (state.fatArrowAt) state.fatArrowAt = null;\n        var arrow = stream.string.indexOf(\"=>\", stream.start);\n        if (arrow < 0) return;\n\n        if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n            var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n            if (m) arrow = m.index\n        }\n\n        var depth = 0, sawSomething = false;\n        for (var pos = arrow - 1; pos >= 0; --pos) {\n            var ch = stream.string.charAt(pos);\n            var bracket = brackets.indexOf(ch);\n            if (bracket >= 0 && bracket < 3) {\n                if (!depth) { ++pos; break; }\n                if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n            } else if (bracket >= 3 && bracket < 6) {\n                ++depth;\n            } else if (wordRE.test(ch)) {\n                sawSomething = true;\n            } else if (/[\"'\\/`]/.test(ch)) {\n                for (; ; --pos) {\n                    if (pos == 0) return\n                    var next = stream.string.charAt(pos - 1)\n                    if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n                }\n            } else if (sawSomething && !depth) {\n                ++pos;\n                break;\n            }\n        }\n        if (sawSomething && !depth) state.fatArrowAt = pos;\n    }\n\n    // Parser\n\n    var atomicTypes = { \"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true };\n\n    function JSLexical(indented, column, type, align, prev, info) {\n        this.indented = indented;\n        this.column = column;\n        this.type = type;\n        this.prev = prev;\n        this.info = info;\n        if (align != null) this.align = align;\n    }\n\n    function inScope(state, varname) {\n        for (var v = state.localVars; v; v = v.next)\n            if (v.name == varname) return true;\n        for (var cx = state.context; cx; cx = cx.prev) {\n            for (var v = cx.vars; v; v = v.next)\n                if (v.name == varname) return true;\n        }\n    }\n\n    function parseJS(state, style, type, content, stream) {\n        var cc = state.cc;\n        // Communicate our context to the combinators.\n        // (Less wasteful than consing up a hundred closures on every call.)\n        cx.state = state; cx.stream = stream; cx.marked = null; cx.cc = cc; cx.style = style;\n\n        if (!state.lexical.hasOwnProperty(\"align\"))\n            state.lexical.align = true;\n\n        while (true) {\n            var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n            if (combinator(type, content)) {\n                while (cc.length && cc[cc.length - 1].lex)\n                    cc.pop()();\n                if (cx.marked) return cx.marked;\n                if (type == \"variable\" && inScope(state, content)) return \"variableName.local\";\n                return style;\n            }\n        }\n    }\n\n    // Combinator utils\n\n    var cx = { state: null, column: null, marked: null, cc: null };\n    function pass() {\n        for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n    }\n    function cont() {\n        pass.apply(null, arguments);\n        return true;\n    }\n    function inList(name, list) {\n        for (var v = list; v; v = v.next) if (v.name == name) return true\n        return false;\n    }\n    function register(varname) {\n        var state = cx.state;\n        cx.marked = \"def\";\n        if (state.context) {\n            if (state.lexical.info == \"var\" && state.context && state.context.block) {\n                // FIXME function decls are also not block scoped\n                var newContext = registerVarScoped(varname, state.context)\n                if (newContext != null) {\n                    state.context = newContext\n                    return\n                }\n            } else if (!inList(varname, state.localVars)) {\n                state.localVars = new Var(varname, state.localVars)\n                return\n            }\n        }\n        // Fall through means this is global\n        if (parserConfig.globalVars && !inList(varname, state.globalVars))\n            state.globalVars = new Var(varname, state.globalVars)\n    }\n    function registerVarScoped(varname, context) {\n        if (!context) {\n            return null\n        } else if (context.block) {\n            var inner = registerVarScoped(varname, context.prev)\n            if (!inner) return null\n            if (inner == context.prev) return context\n            return new Context(inner, context.vars, true)\n        } else if (inList(varname, context.vars)) {\n            return context\n        } else {\n            return new Context(context.prev, new Var(varname, context.vars), false)\n        }\n    }\n\n    function isModifier(name) {\n        return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n    }\n\n    // Combinators\n\n    function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n    function Var(name, next) { this.name = name; this.next = next }\n\n    var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n    function pushcontext() {\n        cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n        cx.state.localVars = defaultVars\n    }\n    function pushblockcontext() {\n        cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n        cx.state.localVars = null\n    }\n    function popcontext() {\n        cx.state.localVars = cx.state.context.vars\n        cx.state.context = cx.state.context.prev\n    }\n    popcontext.lex = true\n    function pushlex(type, info) {\n        var result = function () {\n            var state = cx.state, indent = state.indented;\n            if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n            else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n                indent = outer.indented;\n            state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n        };\n        result.lex = true;\n        return result;\n    }\n    function poplex() {\n        var state = cx.state;\n        if (state.lexical.prev) {\n            if (state.lexical.type == \")\")\n                state.indented = state.lexical.indented;\n            state.lexical = state.lexical.prev;\n        }\n    }\n    poplex.lex = true;\n\n    function expect(wanted) {\n        function exp(type) {\n            if (type == wanted) return cont();\n            else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n            else return cont(exp);\n        };\n        return exp;\n    }\n\n    function statement(type, value) {\n        if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n        if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n        if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n        if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n        if (type == \"debugger\") return cont(expect(\";\"));\n        if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n        if (type == \";\") return cont();\n        if (type == \"if\") {\n            if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n                cx.state.cc.pop()();\n            return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n        }\n        if (type == \"function\") return cont(functiondef);\n        if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n        if (type == \"class\" || (isTS && value == \"interface\")) {\n            cx.marked = \"keyword\"\n            return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n        }\n        if (type == \"variable\") {\n            if (isTS && value == \"declare\") {\n                cx.marked = \"keyword\"\n                return cont(statement)\n            } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n                cx.marked = \"keyword\"\n                if (value == \"enum\") return cont(enumdef);\n                else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n                else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n            } else if (isTS && value == \"namespace\") {\n                cx.marked = \"keyword\"\n                return cont(pushlex(\"form\"), expression, statement, poplex)\n            } else if (isTS && value == \"abstract\") {\n                cx.marked = \"keyword\"\n                return cont(statement)\n            } else {\n                return cont(pushlex(\"stat\"), maybelabel);\n            }\n        }\n        if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n            block, poplex, poplex, popcontext);\n        if (type == \"case\") return cont(expression, expect(\":\"));\n        if (type == \"default\") return cont(expect(\":\"));\n        if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n        if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n        if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n        if (type == \"async\") return cont(statement)\n        if (value == \"@\") return cont(expression, statement)\n        return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n    }\n    function maybeCatchBinding(type) {\n        if (type == \"(\") return cont(funarg, expect(\")\"))\n    }\n    function expression(type, value) {\n        return expressionInner(type, value, false);\n    }\n    function expressionNoComma(type, value) {\n        return expressionInner(type, value, true);\n    }\n    function parenExpr(type) {\n        if (type != \"(\") return pass()\n        return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex)\n    }\n    function expressionInner(type, value, noComma) {\n        if (cx.state.fatArrowAt == cx.stream.start) {\n            var body = noComma ? arrowBodyNoComma : arrowBody;\n            if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n            else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n        }\n\n        var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n        if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n        if (type == \"function\") return cont(functiondef, maybeop);\n        if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n        if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n        if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n        if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n        if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n        if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n        if (type == \"quasi\") return pass(quasi, maybeop);\n        if (type == \"new\") return cont(maybeTarget(noComma));\n        if (type == \"import\") return cont(expression);\n        return cont();\n    }\n    function maybeexpression(type) {\n        if (type.match(/[;\\}\\)\\],]/)) return pass();\n        return pass(expression);\n    }\n\n    function maybeoperatorComma(type, value) {\n        if (type == \",\") return cont(maybeexpression);\n        return maybeoperatorNoComma(type, value, false);\n    }\n    function maybeoperatorNoComma(type, value, noComma) {\n        var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n        var expr = noComma == false ? expression : expressionNoComma;\n        if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n        if (type == \"operator\") {\n            if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n            if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n                return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n            if (value == \"?\") return cont(expression, expect(\":\"), expr);\n            return cont(expr);\n        }\n        if (type == \"quasi\") { return pass(quasi, me); }\n        if (type == \";\") return;\n        if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n        if (type == \".\") return cont(property, me);\n        if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n        if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n        if (type == \"regexp\") {\n            cx.state.lastType = cx.marked = \"operator\"\n            cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n            return cont(expr)\n        }\n    }\n    function quasi(type, value) {\n        if (type != \"quasi\") return pass();\n        if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n        return cont(expression, continueQuasi);\n    }\n    function continueQuasi(type) {\n        if (type == \"}\") {\n            cx.marked = \"string.special\";\n            cx.state.tokenize = tokenQuasi;\n            return cont(quasi);\n        }\n    }\n    function arrowBody(type) {\n        findFatArrow(cx.stream, cx.state);\n        return pass(type == \"{\" ? statement : expression);\n    }\n    function arrowBodyNoComma(type) {\n        findFatArrow(cx.stream, cx.state);\n        return pass(type == \"{\" ? statement : expressionNoComma);\n    }\n    function maybeTarget(noComma) {\n        return function (type) {\n            if (type == \".\") return cont(noComma ? targetNoComma : target);\n            else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n            else return pass(noComma ? expressionNoComma : expression);\n        };\n    }\n    function target(_, value) {\n        if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n    }\n    function targetNoComma(_, value) {\n        if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n    }\n    function maybelabel(type) {\n        if (type == \":\") return cont(poplex, statement);\n        return pass(maybeoperatorComma, expect(\";\"), poplex);\n    }\n    function property(type) {\n        if (type == \"variable\") { cx.marked = \"property\"; return cont(); }\n    }\n    function objprop(type, value) {\n        if (type == \"async\") {\n            cx.marked = \"property\";\n            return cont(objprop);\n        } else if (type == \"variable\" || cx.style == \"keyword\") {\n            cx.marked = \"property\";\n            if (value == \"get\" || value == \"set\") return cont(getterSetter);\n            var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n            if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n                cx.state.fatArrowAt = cx.stream.pos + m[0].length\n            return cont(afterprop);\n        } else if (type == \"number\" || type == \"string\") {\n            cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n            return cont(afterprop);\n        } else if (type == \"jsonld-keyword\") {\n            return cont(afterprop);\n        } else if (isTS && isModifier(value)) {\n            cx.marked = \"keyword\"\n            return cont(objprop)\n        } else if (type == \"[\") {\n            return cont(expression, maybetype, expect(\"]\"), afterprop);\n        } else if (type == \"spread\") {\n            return cont(expressionNoComma, afterprop);\n        } else if (value == \"*\") {\n            cx.marked = \"keyword\";\n            return cont(objprop);\n        } else if (type == \":\") {\n            return pass(afterprop)\n        }\n    }\n    function getterSetter(type) {\n        if (type != \"variable\") return pass(afterprop);\n        cx.marked = \"property\";\n        return cont(functiondef);\n    }\n    function afterprop(type) {\n        if (type == \":\") return cont(expressionNoComma);\n        if (type == \"(\") return pass(functiondef);\n    }\n    function commasep(what, end, sep) {\n        function proceed(type, value) {\n            if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n                var lex = cx.state.lexical;\n                if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n                return cont(function (type, value) {\n                    if (type == end || value == end) return pass()\n                    return pass(what)\n                }, proceed);\n            }\n            if (type == end || value == end) return cont();\n            if (sep && sep.indexOf(\";\") > -1) return pass(what)\n            return cont(expect(end));\n        }\n        return function (type, value) {\n            if (type == end || value == end) return cont();\n            return pass(what, proceed);\n        };\n    }\n    function contCommasep(what, end, info) {\n        for (var i = 3; i < arguments.length; i++)\n            cx.cc.push(arguments[i]);\n        return cont(pushlex(end, info), commasep(what, end), poplex);\n    }\n    function block(type) {\n        if (type == \"}\") return cont();\n        return pass(statement, block);\n    }\n    function maybetype(type, value) {\n        if (isTS) {\n            if (type == \":\") return cont(typeexpr);\n            if (value == \"?\") return cont(maybetype);\n        }\n    }\n    function maybetypeOrIn(type, value) {\n        if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n    }\n    function mayberettype(type) {\n        if (isTS && type == \":\") {\n            if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n            else return cont(typeexpr)\n        }\n    }\n    function isKW(_, value) {\n        if (value == \"is\") {\n            cx.marked = \"keyword\"\n            return cont()\n        }\n    }\n    function typeexpr(type, value) {\n        if (value == \"keyof\" || value == \"typeof\" || value == \"infer\") {\n            cx.marked = \"keyword\"\n            return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n        }\n        if (type == \"variable\" || value == \"void\") {\n            cx.marked = \"type\"\n            return cont(afterType)\n        }\n        if (value == \"|\" || value == \"&\") return cont(typeexpr)\n        if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n        if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n        if (type == \"{\") return cont(pushlex(\"}\"), typeprops, poplex, afterType)\n        if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n        if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n    }\n    function maybeReturnType(type) {\n        if (type == \"=>\") return cont(typeexpr)\n    }\n    function typeprops(type) {\n        if (type == \"}\") return cont()\n        if (type == \",\" || type == \";\") return cont(typeprops)\n        return pass(typeprop, typeprops)\n    }\n    function typeprop(type, value) {\n        if (type == \"variable\" || cx.style == \"keyword\") {\n            cx.marked = \"property\"\n            return cont(typeprop)\n        } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n            return cont(typeprop)\n        } else if (type == \":\") {\n            return cont(typeexpr)\n        } else if (type == \"[\") {\n            return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n        } else if (type == \"(\") {\n            return pass(functiondecl, typeprop)\n        }\n    }\n    function typearg(type, value) {\n        if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n        if (type == \":\") return cont(typeexpr)\n        if (type == \"spread\") return cont(typearg)\n        return pass(typeexpr)\n    }\n    function afterType(type, value) {\n        if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n        if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n        if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n        if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n        if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n    }\n    function maybeTypeArgs(_, value) {\n        if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    }\n    function typeparam() {\n        return pass(typeexpr, maybeTypeDefault)\n    }\n    function maybeTypeDefault(_, value) {\n        if (value == \"=\") return cont(typeexpr)\n    }\n    function vardef(_, value) {\n        if (value == \"enum\") { cx.marked = \"keyword\"; return cont(enumdef) }\n        return pass(pattern, maybetype, maybeAssign, vardefCont);\n    }\n    function pattern(type, value) {\n        if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n        if (type == \"variable\") { register(value); return cont(); }\n        if (type == \"spread\") return cont(pattern);\n        if (type == \"[\") return contCommasep(eltpattern, \"]\");\n        if (type == \"{\") return contCommasep(proppattern, \"}\");\n    }\n    function proppattern(type, value) {\n        if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n            register(value);\n            return cont(maybeAssign);\n        }\n        if (type == \"variable\") cx.marked = \"property\";\n        if (type == \"spread\") return cont(pattern);\n        if (type == \"}\") return pass();\n        if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n        return cont(expect(\":\"), pattern, maybeAssign);\n    }\n    function eltpattern() {\n        return pass(pattern, maybeAssign)\n    }\n    function maybeAssign(_type, value) {\n        if (value == \"=\") return cont(expressionNoComma);\n    }\n    function vardefCont(type) {\n        if (type == \",\") return cont(vardef);\n    }\n    function maybeelse(type, value) {\n        if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n    }\n    function forspec(type, value) {\n        if (value == \"await\") return cont(forspec);\n        if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n    }\n    function forspec1(type) {\n        if (type == \"var\") return cont(vardef, forspec2);\n        if (type == \"variable\") return cont(forspec2);\n        return pass(forspec2)\n    }\n    function forspec2(type, value) {\n        if (type == \")\") return cont()\n        if (type == \";\") return cont(forspec2)\n        if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n        return pass(expression, forspec2)\n    }\n    function functiondef(type, value) {\n        if (value == \"*\") { cx.marked = \"keyword\"; return cont(functiondef); }\n        if (type == \"variable\") { register(value); return cont(functiondef); }\n        if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n        if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n    }\n    function functiondecl(type, value) {\n        if (value == \"*\") { cx.marked = \"keyword\"; return cont(functiondecl); }\n        if (type == \"variable\") { register(value); return cont(functiondecl); }\n        if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n        if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n    }\n    function typename(type, value) {\n        if (type == \"keyword\" || type == \"variable\") {\n            cx.marked = \"type\"\n            return cont(typename)\n        } else if (value == \"<\") {\n            return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n        }\n    }\n    function funarg(type, value) {\n        if (value == \"@\") cont(expression, funarg)\n        if (type == \"spread\") return cont(funarg);\n        if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n        if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n        return pass(pattern, maybetype, maybeAssign);\n    }\n    function classExpression(type, value) {\n        // Class expressions may have an optional name.\n        if (type == \"variable\") return className(type, value);\n        return classNameAfter(type, value);\n    }\n    function className(type, value) {\n        if (type == \"variable\") { register(value); return cont(classNameAfter); }\n    }\n    function classNameAfter(type, value) {\n        if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n        if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n            if (value == \"implements\") cx.marked = \"keyword\";\n            return cont(isTS ? typeexpr : expression, classNameAfter);\n        }\n        if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n    }\n    function classBody(type, value) {\n        if (type == \"async\" ||\n            (type == \"variable\" &&\n                (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n                cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n            cx.marked = \"keyword\";\n            return cont(classBody);\n        }\n        if (type == \"variable\" || cx.style == \"keyword\") {\n            cx.marked = \"property\";\n            return cont(classfield, classBody);\n        }\n        if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n        if (type == \"[\")\n            return cont(expression, maybetype, expect(\"]\"), classfield, classBody)\n        if (value == \"*\") {\n            cx.marked = \"keyword\";\n            return cont(classBody);\n        }\n        if (isTS && type == \"(\") return pass(functiondecl, classBody)\n        if (type == \";\" || type == \",\") return cont(classBody);\n        if (type == \"}\") return cont();\n        if (value == \"@\") return cont(expression, classBody)\n    }\n    function classfield(type, value) {\n        if (value == \"?\") return cont(classfield)\n        if (type == \":\") return cont(typeexpr, maybeAssign)\n        if (value == \"=\") return cont(expressionNoComma)\n        var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n        return pass(isInterface ? functiondecl : functiondef)\n    }\n    function afterExport(type, value) {\n        if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n        if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n        if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n        return pass(statement);\n    }\n    function exportField(type, value) {\n        if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n        if (type == \"variable\") return pass(expressionNoComma, exportField);\n    }\n    function afterImport(type) {\n        if (type == \"string\") return cont();\n        if (type == \"(\") return pass(expression);\n        return pass(importSpec, maybeMoreImports, maybeFrom);\n    }\n    function importSpec(type, value) {\n        if (type == \"{\") return contCommasep(importSpec, \"}\");\n        if (type == \"variable\") register(value);\n        if (value == \"*\") cx.marked = \"keyword\";\n        return cont(maybeAs);\n    }\n    function maybeMoreImports(type) {\n        if (type == \",\") return cont(importSpec, maybeMoreImports)\n    }\n    function maybeAs(_type, value) {\n        if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n    }\n    function maybeFrom(_type, value) {\n        if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n    }\n    function arrayLiteral(type) {\n        if (type == \"]\") return cont();\n        return pass(commasep(expressionNoComma, \"]\"));\n    }\n    function enumdef() {\n        return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n    }\n    function enummember() {\n        return pass(pattern, maybeAssign);\n    }\n\n    function isContinuedStatement(state, textAfter) {\n        return state.lastType == \"operator\" || state.lastType == \",\" ||\n            isOperatorChar.test(textAfter.charAt(0)) ||\n            /[,.]/.test(textAfter.charAt(0));\n    }\n\n    function expressionAllowed(stream, state, backUp) {\n        return state.tokenize == tokenBase &&\n            /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n            (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n    }\n\n    // Interface\n\n    return {\n        startState: function (indentUnit) {\n            var state = {\n                tokenize: tokenBase,\n                lastType: \"sof\",\n                cc: [],\n                lexical: new JSLexical(-indentUnit, 0, \"block\", false),\n                localVars: parserConfig.localVars,\n                context: parserConfig.localVars && new Context(null, null, false),\n                indented: 0\n            };\n            if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n                state.globalVars = parserConfig.globalVars;\n            return state;\n        },\n\n        token: function (stream, state) {\n            if (stream.sol()) {\n                if (!state.lexical.hasOwnProperty(\"align\"))\n                    state.lexical.align = false;\n                state.indented = stream.indentation();\n                findFatArrow(stream, state);\n            }\n            if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n            var style = state.tokenize(stream, state);\n            if (type == \"comment\") return style;\n            state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n            return parseJS(state, style, type, content, stream);\n        },\n\n        indent: function (state, textAfter, cx) {\n            if (state.tokenize == tokenComment || state.tokenize == tokenQuasi) return null;\n            if (state.tokenize != tokenBase) return 0;\n            var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n            // Kludge to prevent 'maybelse' from blocking lexical scope pops\n            if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n                var c = state.cc[i];\n                if (c == poplex) lexical = lexical.prev;\n                else if (c != maybeelse) break;\n            }\n            while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n                (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                    (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                    !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n                lexical = lexical.prev;\n            if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n                lexical = lexical.prev;\n            var type = lexical.type, closing = firstChar == type;\n\n            if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n            else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n            else if (type == \"form\") return lexical.indented + cx.unit;\n            else if (type == \"stat\")\n                return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || cx.unit : 0);\n            else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n                return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? cx.unit : 2 * cx.unit);\n            else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n            else return lexical.indented + (closing ? 0 : cx.unit);\n        },\n\n        languageData: {\n            indentOnInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n            commentTokens: jsonMode ? undefined : { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n            closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n            wordChars: \"$\"\n        }\n    };\n};\n\nexport const arabJsMode = mkJavaScript({})\nexport const json = mkJavaScript({ json: true })\nexport const jsonld = mkJavaScript({ jsonld: true })\nexport const typescript = mkJavaScript({ typescript: true })","import { EditorState, EditorView, basicSetup } from \"@codemirror/basic-setup\"\nimport { oneDark } from \"@codemirror/theme-one-dark\"\nimport { useEffect, useRef } from \"react\"\nimport { StreamLanguage } from \"@codemirror/stream-parser\"\nimport { arabJsMode } from \"./arabJs/arabJsMode\"\nimport { tagExtension } from \"@codemirror/state\"\n\n\nexport default function Editor({ code, editor }) {\n    const editorRef = useRef(null);\n    let editableTagrtl = Symbol()\n\n    useEffect(() => {\n        editor.current = new EditorView({\n            state: EditorState.create({\n                doc: code,\n                extensions: [\n                    oneDark,\n                    basicSetup,\n                    StreamLanguage.define(arabJsMode),\n                    tagExtension(editableTagrtl, EditorView.editable.of(true))\n                ],\n\n            }),\n            parent: editorRef.current,\n        })\n    }, [])\n\n    return (\n        <div ref={editorRef} style={{ height: \"350px\" }} dir={\"rtl\"}></div>\n    )\n}","import { EditorState, EditorView, basicSetup } from \"@codemirror/basic-setup\"\nimport { oneDark } from \"@codemirror/theme-one-dark\"\nimport { useEffect, useRef } from \"react\"\nimport { StreamLanguage } from \"@codemirror/stream-parser\"\nimport { arabJsMode } from \"./arabJs/arabJsMode\"\nimport { tagExtension } from \"@codemirror/state\"\n\n\nexport default function EditorNext({ code }) {\n    const editorRef = useRef(null);\n    let editableTagltr = Symbol();\n\n    useEffect(() => {\n      new EditorView({\n            state: EditorState.create({\n                doc: code,\n                extensions: [\n                    oneDark,\n                    basicSetup,\n                    StreamLanguage.define(arabJsMode),\n                    tagExtension( editableTagltr, EditorView.editable.of(false))\n                ],\n\n            }),\n            parent: editorRef.current,\n        })\n    }, [])\n\n    return (\n        <div ref={editorRef} style={{ height: \"350px\" }} dir={\"ltr\"}></div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Console, Hook, Unhook } from 'console-feed'\n\n\n\n\nexport default function JsConsole() {\n    const [logs, setLogs] = useState([])\n\n    useEffect(() => {\n        Hook(window.console, log => setLogs(currLogs => [...currLogs, log]), false);\n        return () => Unhook(window.console)\n    }, []);\n\n\n    return (\n        <div style={{ backgroundColor: \"#242424\" }}>\n            <Console filter={[\"log\", \"table\", \"clear\", \"info\"]} logs={logs} variant=\"dark\"  />\n        </div>\n    )\n\n\n}\n\n","import React, { useState, useRef } from 'react';\nimport arabJs from \"arabjs\";\nimport CodeSnippets from \"./CodeSnippets\";\nimport EditorArabJS from \"./EditorArabJS\";\nimport EditorJS from \"./EditorJS\";\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport JsConsole from \"./JsConsole\"\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    backgroundColor: \"green\",\n    color: \"white\",\n    '&:hover': {\n      color: \"black\",\n      backgroundColor: \"green\",\n    },\n  },\n\n}));\n\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\nexport default function App() {\n\n  const classes = useStyles();\n\n  const [arabJSCode, setArabJsCode] = useState(`اطبع.نص(\"اهلاً بالعالم\")`);\n  const [JScode, setJSCode] = useState(`console.log(\"اهلاً بالعالم\")`);\n\n  const [target, setTarget] = useState(\"console\");\n  const editor = useRef(null);\n  const [loadingText, setLoadingText] = useState(\"\");\n  const [isArabJSCode, setIsArabJsCode] = useState(true);\n\n  const execute = (finalCode) => {\n    finalCode = isArabJSCode ? finalCode : arabJSCode;\n    try {\n      if (target === \"console\") {\n        console.log(arabJs.run(finalCode));\n\n\n      }\n      else if (target === \"DOM\") {\n        arabJs.run(finalCode);\n        setLoadingText(\"أنتظر قليلأ...\")\n\n      }\n      setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 100);\n    } catch (error) {\n      console.info(error)\n    }\n  }\n  const runCode = () => {\n    const finalCode = editor.current.state.doc.toString();\n    execute(finalCode);\n  }\n  const targetRender = () => {\n    return (\n      <div key={arabJSCode}>\n        <JsConsole> </JsConsole>\n        <div className=\"myChart\" width=\"400\" height=\"400\">\n          {loadingText}\n        </div>\n      </div>\n    );\n  }\n  const changeEditorContent = (finalCode) => {\n    editor.current.dispatch(editor.current.state.update(\n      {\n        changes: { from: 0, to: editor.current.state.doc.length, insert: finalCode }\n      }));\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"hero\">\n        <div className=\"title\">عرب.جس</div>\n        <div className=\"subTitle\"> برمج جافا سكربت باللغة العربية</div>\n        <div className=\"npm\">\n          <div>للتحميل</div>\n          <code className=\"code\"> npm i arabjs </code>\n        </div>\n      </div>\n      <div className=\"controls\" >\n        <div className=\"oneControl\">\n          <CodeSnippets onCodeChange={(finalCode, target) => { changeEditorContent(finalCode); setArabJsCode(finalCode); setTarget(target); setLoadingText(\"\"); }}></CodeSnippets>\n        </div>\n        <div className=\"secondoneControl\">\n          <Typography component=\"div\">\n            <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n              <Grid item>ArabJs</Grid>\n              <Grid item>\n                <AntSwitch checked={isArabJSCode} onChange={() => {\n                  if (isArabJSCode) {\n                    let localCode = editor.current.state.doc.toString();\n                    setArabJsCode(localCode);\n                    try {\n                      setJSCode(arabJs.transpile(localCode));\n                    } catch (erro) {\n                      setJSCode(`*/Invalid ArabJs code!*/`);\n\n                      console.error(erro)\n                    }\n                  }\n                  setIsArabJsCode(!isArabJSCode);\n                }\n                } name=\"checkedC\" />\n              </Grid>\n              <Grid item>JavaScript</Grid>\n            </Grid>\n          </Typography>\n        </div>\n        <div className= \"thirdoneControl\">\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<PlayArrow />}\n            onClick={runCode}\n          >\n            نفذ البرنامج\n      </Button>\n        </div>\n      </div>\n      {isArabJSCode ?\n        <EditorArabJS code={arabJSCode} editor={editor} ></EditorArabJS> :\n        <EditorJS code={JScode}  ></EditorJS>}\n\n      <br />\n\n      {targetRender()}\n    </div>\n\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\n\nconst rtlStyle = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <StylesProvider jss={rtlStyle}>\n      <App />\n    </StylesProvider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}